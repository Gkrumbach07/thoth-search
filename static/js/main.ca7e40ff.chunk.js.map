{"version":3,"sources":["lib/react-query.js","styles/Theme.js","stores/Global.js","components/Footer/Footer.js","components/Layout/MainLayout.js","components/Layout/AdviseLayout.js","providers/app.js","components/Elements/TabPanel/TabPanel.js","assets/thoth-logo.png","components/Elements/SearchBar/SearchBar.js","config/index.js","features/home/api/postAdvise.js","features/home/api/getPackageExists.js","features/home/components/PackageSearch.js","features/home/components/ComboBox/ComboBox.js","features/home/components/AdviseCreation.js","features/home/routes/index.js","features/misc/routes/NotFound.js","components/Elements/InfoCard/InfoCard.js","components/Elements/IconText/IconText.js","features/advise/utils/formatLockfile.js","utils/timeSince.js","features/advise/utils/calcTime.js","features/advise/utils/discoverPackageChanges.js","features/advise/components/AdviseHeader/CustomAlert/CustomAlert.js","features/advise/components/AdviseHeader/AdviseHeader.js","components/Elements/ProgressBar/ProgressBar.js","features/advise/components/AdviseMetric/AdviseMetric.js","features/advise/components/CustomCardAction/CustomCardAction.js","features/advise/components/DependenciesMetric/DependenciesMetric.js","features/advise/components/LicenseMetric/LicenseGroup/LicenseGroup.js","features/advise/components/LicenseMetric/LicenseMetric.js","features/advise/components/AdviseTableView/utils.js","features/advise/components/AdviseTableView/EnhancedTableHead/EnhancedTableHead.js","utils/Node.js","features/advise/features/components/Popup/Popup.js","utils/Graph.js","features/advise/features/components/NetworkGraphView/NetworkGraphView.js","features/advise/features/components/SelectedPackage/SelectedPackage.js","features/advise/routes/AdviseDetails.js","features/advise/components/AdviseTableView/AdviseTableView.js","features/advise/components/LockfileView/LockfileView.js","features/advise/routes/AdviseSummary.js","features/advise/api/getAdviseDocument.js","features/advise/api/getAdviseLogs.js","features/misc/api/getPackageMetadata.js","features/advise/hooks/useGraph.js","features/advise/hooks/useMetrics.js","features/advise/routes/AdviseNotFound.js","components/Layout/NavigationLayout.js","features/advise/routes/index.js","features/advise/hooks/useMergeGraphs.js","features/package/components/ParamDropdown/ParamDropdown.js","features/package/components/PackageHeader/PackageHeader.js","features/package/components/PackageDependencies/VersionDropdown.js","features/package/components/PackageDependencies/PackageDependencies.js","features/package/routes/PackageNotFound.js","features/package/components/PackageLicenses/PackageLicenses.js","features/package/api/getPackageVersions.js","features/package/api/getPackageEnvironments.js","features/package/hooks/useAllVersions.js","features/package/routes/PackageOverview.js","features/package/hooks/useSimpleGraph.js","features/package/routes/index.js","routes/RouterConfig.js","App.js","index.js"],"names":["queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","refetchOnMount","retry","themeLight","createTheme","palette","background","default","primary","light","main","dark","secondary","text","priamry","typography","fontFamily","h4","fontWeight","fontSize","color","lineHeight","h5","h6","body1","body2","subtitle1","subtitle2","Theme","children","ThemeProvider","theme","CssBaseline","StateContext","React","undefined","DispatchContext","reducer","state","action","type","Error","initState","Global","dispatch","Provider","value","Footer","Box","pb","pt","sx","backgroundColor","textAlign","useStyles","makeStyles","root","marginLeft","marginRight","paddingRight","spacing","paddingLeft","marginTop","marginBottom","minHeight","MainLayout","classes","className","AdviseLayout","header","location","useLocation","Tabs","pathname","split","at","indicatorColor","textColor","Tab","label","component","RouterLink","to","ErrorFallback","Button","onClick","window","assign","origin","AppProvider","FallbackComponent","client","TabPanel","index","props","role","hidden","id","SearchBar","onChange","onEnter","helpertext","boxprops","error","lefticon","righticon","Typography","variant","Paper","p","display","alignItems","borderColor","InputBase","ml","flex","placeholder","e","target","onKeyPress","ev","key","preventDefault","THOTH_URL","process","REACT_APP_DEPLOYMENT","options","manipulation","enabled","editNode","nodeData","callback","fixed","x","interaction","hover","hoverConnectedEdges","selectConnectedEdges","selectable","edges","chosen","smooth","arrowStrikethrough","arrows","from","nodes","border","shape","size","borderWidth","labelHighlightBold","font","strokeWidth","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","postAdvise","pipfile","pipfileLock","runtime_environment","data","application_stack","requirements","requirements_format","requirements_lock","axios","post","params","recommendation_type","limit","headers","accept","getPackageExists","name","a","get","per_page","then","res","versions","length","catch","PackageSearch","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchError","setSearchError","handleAnalyze","Grid","container","justifyContent","alignSelf","item","xs","md","handleChange","mr","minWidth","filter","createFilterOptions","ComboBox","suggestions","help","required","setValue","useMemo","map","suggestion","title","Autocomplete","event","newValue","inputValue","filterOptions","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","fullWidth","helperText","loading","payload","param","lookupType","operating_system_name","operating_system_version","platform","python_version","cuda_version","cudnn_version","mkl_version","openblas_version","openmpi_version","base_image","AdviseCreation","useReducer","isValid","valid","operating_system","version","Object","keys","forEach","response","analysis_id","status","includes","Collapse","in","mt","padding","multiline","rows","sm","TextField","LoadingButton","Home","mode","setMode","useTheme","matches","useMediaQuery","breakpoints","up","style","maxWidth","alt","src","logo","height","width","align","mb","direction","stat","i","ToggleButtonGroup","exclusive","newMode","ToggleButton","Divider","NotFound","bullet","margin","transform","pos","InfoCard","cardMeta","cardBody","cardAction","Card","CardHeader","subheader","subTitle","CardContent","IconText","icon","link","href","formatLockfile","lockfile","entries","requirements_locked","replace","os_name","os_version","timeSince","date","seconds","Math","floor","Date","interval","num","discoverPackageChanges","justifications","justifiedPackages","Map","justification","package_name","has","set","node","package","change","depth","reasons","start","packages","visited","visitList","reasonNodes","pop","parents","adj","reason","oldVersion","whyRemoved","thoth","CustomAlert","info","Alert","severity","toLowerCase","message","titleRow","linksRow","alert","AdviseHeader","finished_at","started_at","datetime","adviseDocument","logs","expandAlerts","setExpandAlerts","showLogs","setShowLogs","selectedLine","setSelectedLine","result","report","ERROR","toUpperCase","statusText","statusColor","alerts","stack_info","metadata","document_id","parameters","Chip","error_msg","timeout","unmountOnExit","slice","line","noWrap","CustomLinearProgress","withStyles","borderRadius","colorPrimary","grey","bar","LinearProgress","gridTemplateColumns","gridGap","whiteSpace","overflow","textOverflow","ProgressBar","total","AdviseMetric","metric","added","removed","unchanged","justTotal","values","reduce","b","gutterBottom","build","Skeleton","CustomCardAction","DependenciesMetric","all","roots","totalDependencies","direct","indirect","List","TransitionGroup","t","ListItem","ListItemText","LicenseGroup","totalLicenses","open","setOpen","isOsiApproved","my","sort","k","v","LicenseMetric","more","setMore","licenses","sum","val","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","headCells","numeric","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","property","visuallyHidden","Node","this","adjacents","Set","add","Array","Popup","Summary","License","latestVersion","Graph","vertex","source","destination","sourceNode","destinationNode","addAdjacent","isAdjacent","first","shift","getAdjacents","path","newPath","nextPath","findPath","parent","paths","findAllPaths","flexFlow","canvas","NetworkGraph","mergedGraph","visJsRef","useRef","selected","useContext","SelectedPackageContext","useEffect","selectedNode","findAllNodesOnAllPaths","convertedNodes","DataSet","popup","document","createElement","ReactDOM","render","visData","visEdges","network","current","Network","networkCanvas","getElementById","getElementsByTagName","on","changeCursor","isCluster","newCursorStyle","cursor","ref","SelectedPackage","setSelected","selectedPackage","dependents","justs","just","Name","Version","Link","underline","Fragment","advisory","NetworkGraphView","createContext","AdviseDetails","search","setSearch","s","AdviseTableView","filteredGraph","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","setRows","console","log","newRows","warnings","license","dependencies","summary","emptyRows","max","TableContainer","Table","TableBody","row","labelId","iconColor","tabIndex","scope","paddingBottom","paddingTop","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","AdviseSummary","metrics","setPipfile","handlePipfile","newPipfile","advise","getAdviseDocument","getAdviseLogs","getPackageMetadata","usePackagesMetadata","config","useQueries","queryKey","queryFn","useGraph","knownRoots","allMetadata","allMetadataStatus","success","query","graph","setGraph","tempGraph","notRoot","addVertex","importlib_metadata","currentNode","dep","adjacentNode","addEdge","app","adjs","min","useDependencyMetric","setMetric","base","bfs","graphSearch","useLicenseMetric","packageLicenses","Classifier","classifier","parsed","generalLicense","specificLicense","specific","useAdviseMetric","os_release","python","implementation_name","major","minor","micro","analyzer","analyzer_version","products","AdviseNotFound","NavigationLayout","AdviseRoutes","useParams","useQuery","useAdviseDocument","refetchInterval","useAdviseLogs","initGraphData","isSuccess","project","adviseGraphData","initGraph","adviseGraph","oldGraph","newGraph","visGraphEdges","combinedNode","useMergeGraphs","adviseMetric","oldDependencyMetric","newDependencyMetric","oldLicenseMetric","newLicenseMetric","useMetrics","isLoading","CircularProgress","element","ParamDropdown","disabled","SpecContext","specs","defaultSpecs","Select","displayEmpty","package_version","encodeURIComponent","index_url","renderValue","MenuItem","PackageHeader","allVersions","allEnvironments","showEnvParams","setShowEnvParams","versionOptions","dups","indexUrlOptions","env","osNameOptions","osVersionOptions","pythonVersionOptions","IconButton","VersionDropdown","anchorEl","setAnchorEl","distribution","noDup","currentKey","buckets","ceil","fixedVersionOptions","currentTarget","endIcon","specifier","Menu","onClose","PaperProps","maxHeight","alignContent","divider","PackageDependencies","visitedOrder","extra","rowSpacing","join","PackageNotFound","getPackageVersions","getPackageEnvironments","useAllVersions","useInfiniteQuery","input","pageParam","getNextPageParam","lastPage","setAllVersions","hasNextPage","isFetchingNextPage","fetchNextPage","merged","pages","reverse","flexGrow","PackageOverview","setDefaultSpecs","decodeURIComponent","d","environments","usePackageMetadata","useSimpleGraph","PackageRoutes","RouterConfig","basename","exact","App","StrictMode"],"mappings":"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","file":"static/js/main.ca7e40ff.chunk.js","sourcesContent":["import { QueryClient } from \"react-query\";\n\nconst queryConfig = {\n    queries: {\n        useErrorBoundary: true,\n        refetchOnWindowFocus: false,\n        refetchOnMount: false,\n        retry: false,\n    },\n};\n\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });\n","import React from \"react\";\n\n// material ui\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst themeLight = createTheme({\n    palette: {\n        background: {\n            default: \"#f9f9f9\",\n        },\n        primary: {\n            light: \"#f5a733\",\n            main: \"#f39200\",\n            dark: \"#aa6600\",\n        },\n        secondary: {\n            light: \"#72cdee\",\n            main: \"#4fc1ea\",\n            dark: \"#3787a3\",\n        },\n        text: {\n            priamry: \"#363636\",\n            secondary: \"#999\",\n        },\n    },\n    typography: {\n        fontFamily: [\"open sans\", \"sans-serif\"],\n        h4: {\n            fontWeight: 700,\n            fontSize: \"3rem\",\n            color: \"#363636\",\n            lineHeight: 1.125,\n        },\n        h5: {\n            fontWeight: 600,\n            fontSize: \"2rem\",\n            lineHeight: 1.125,\n            color: \"#363636\",\n        },\n        h6: {\n            fontWeight: 600,\n            fontSize: \"1.2rem\",\n            color: \"#444f60\",\n            lineHeight: 1.5,\n        },\n\n        body1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#000\",\n        },\n\n        body2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#000\",\n        },\n        subtitle1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#999\",\n        },\n\n        subtitle2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#999\",\n        },\n    },\n});\n\nfunction Theme({ children }) {\n    return (\n        <ThemeProvider theme={themeLight}>\n            <CssBaseline />\n            {children}\n        </ThemeProvider>\n    );\n}\n\nTheme.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Theme;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const StateContext = React.createContext(undefined);\nexport const DispatchContext = React.createContext(undefined);\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        default:\n            throw new Error(\"State dispatch error\");\n    }\n}\n\nexport const initState = {};\n\nexport default function Global({ children }) {\n    // for state control\n    const [state, dispatch] = React.useReducer(reducer, initState);\n    return (\n        <StateContext.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>\n                {children}\n            </DispatchContext.Provider>\n        </StateContext.Provider>\n    );\n}\n\nGlobal.propTypes = {\n    children: PropTypes.node,\n};\n","import React from \"react\";\n\nimport { Box } from \"@material-ui/core\";\n\nexport const Footer = () => {\n    return (\n        <Box\n            pb={3}\n            pt={6}\n            sx={{\n                backgroundColor: \"#444f60\",\n                textAlign: \"center\",\n                color: \"white\",\n            }}\n        >\n            This is a footer\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Footer } from \"../Footer\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(15),\n        minHeight: \"100vh\",\n    },\n}));\n\n/**\n * Main layout adds margins and spacing to the whole app.\n */\nexport const MainLayout = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.root}>{children}</div>\n            <Footer />\n        </>\n    );\n};\n\nMainLayout.propTypes = {\n    children: PropTypes.node,\n};\n","import * as React from \"react\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A layout used for the advise feature tabs. It formats the tabs as router links.\n */\nexport const AdviseLayout = ({ children, header }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <div>\n                {header}\n                <Tabs\n                    value={location.pathname.split(\"/\").at(-1)}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab\n                        label=\"Summary\"\n                        value={\"summary\"}\n                        component={RouterLink}\n                        to=\"summary\"\n                    />\n                    <Tab\n                        label=\"Advise Results\"\n                        value={\"details\"}\n                        component={RouterLink}\n                        to=\"details\"\n                    />\n                </Tabs>\n            </div>\n            <div>{children}</div>\n        </>\n    );\n};\n\nAdviseLayout.propTypes = {\n    children: PropTypes.node,\n    header: PropTypes.element,\n};\n","import * as React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { QueryClientProvider } from \"react-query\";\nimport { queryClient } from \"lib/react-query\";\nimport { Button } from \"@material-ui/core\";\nimport Theme from \"styles/Theme\";\nimport Global from \"stores/Global\";\nimport { MainLayout } from \"components/Layout\";\nimport PropTypes from \"prop-types\";\n\nconst ErrorFallback = () => {\n    return (\n        <div>\n            <h2>Oops, something went wrong :( </h2>\n            <Button\n                onClick={() => window.location.assign(window.location.origin)}\n            >\n                Refresh\n            </Button>\n        </div>\n    );\n};\n\nexport const AppProvider = ({ children }) => {\n    return (\n        <Theme>\n            <Global>\n                <ErrorBoundary FallbackComponent={ErrorFallback}>\n                    <QueryClientProvider client={queryClient}>\n                        <MainLayout>{children}</MainLayout>\n                    </QueryClientProvider>\n                </ErrorBoundary>\n            </Global>\n        </Theme>\n    );\n};\n\nAppProvider.propTypes = {\n    children: PropTypes.node,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A tab panel used to encapsulate different tab content.\n */\nconst TabPanel = ({ children, value, index, ...props }) => {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            className={`${props.className}`}\n            {...props}\n        >\n            {value === index && children}\n        </div>\n    );\n};\n\nTabPanel.propTypes = {\n    /** The body of the tab. */\n    children: PropTypes.node,\n    /** The unique identifier of the tab. */\n    index: PropTypes.any.isRequired,\n    /** The state variable passed in from the parent which is compared to the index */\n    value: PropTypes.any.isRequired,\n    /** additional styling */\n    className: PropTypes.string,\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/thoth-logo.1a28a729.png\";","import React from \"react\";\n\n// material ui\nimport { Typography, Box, Paper, InputBase } from \"@material-ui/core\";\n\n// react\nimport PropTypes from \"prop-types\";\n\n/**\n *\n */\nconst SearchBar = props => {\n    const {\n        onChange,\n        onEnter,\n        label,\n        helpertext,\n        boxprops,\n        error = false,\n        lefticon,\n        righticon,\n    } = props;\n\n    return (\n        <Box>\n            <Typography\n                variant={\"body1\"}\n                sx={{ color: error ? \"error.main\" : \"text.secondary\" }}\n            >\n                {label}\n            </Typography>\n            <Paper\n                component=\"form\"\n                variant=\"outlined\"\n                sx={{\n                    p: \"8px 4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    borderColor: error ? \"red\" : undefined,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                }}\n                {...boxprops}\n            >\n                {lefticon}\n                <InputBase\n                    sx={{ ml: 1, flex: 1 }}\n                    placeholder={helpertext}\n                    error={error}\n                    onChange={e => onChange(e.target.value)}\n                    onKeyPress={ev => {\n                        if (ev.key === \"Enter\") {\n                            onEnter();\n                            ev.preventDefault();\n                        }\n                    }}\n                    {...props}\n                />\n                {righticon}\n            </Paper>\n        </Box>\n    );\n};\n\nSearchBar.propTypes = {\n    /** The error text or default label text */\n    label: PropTypes.string,\n    /** callback function when textbox content changes */\n    onChange: PropTypes.func.isRequired,\n    /** callback function when textbox ENTER is pressed */\n    onEnter: PropTypes.func,\n    /** helper text for the search bar */\n    helpertext: PropTypes.string,\n    /** if there is an error or not */\n    error: PropTypes.bool,\n    /** icon displayed on the left of the text box */\n    lefticon: PropTypes.node,\n    /** icon displayed on the right of the text box */\n    righticon: PropTypes.node,\n    /** Props added to the text box */\n    boxprops: PropTypes.any,\n};\n\nexport default SearchBar;\n","export const PYPI_URL = \"https://pypi.org/pypi\";\nexport const THOTH_URL =\n    process.env.REACT_APP_DEPLOYMENT === \"STAGE\" ||\n    process.env.NODE_ENV === \"development\"\n        ? \"https://stage.thoth-station.ninja/api/v1\"\n        : \"https://khemenu.thoth-station.ninja/api/v1\";\nexport const LICENSES_URL =\n    \"https://raw.githubusercontent.com/spdx/license-list-data/master/json/licenses.json\";\n\n/**\n * used for vis-js graph render engine\n */\nexport const options = {\n    manipulation: {\n        enabled: false,\n        editNode: function (nodeData, callback) {\n            nodeData.fixed = !nodeData.fixed.x;\n            callback(nodeData);\n        },\n    },\n    interaction: {\n        hover: true,\n        hoverConnectedEdges: false,\n        selectConnectedEdges: false,\n        selectable: true,\n    },\n    edges: {\n        chosen: false,\n        smooth: false,\n        color: {\n            color: \"#5c6470\",\n        },\n        arrowStrikethrough: false,\n        arrows: {\n            from: {\n                enabled: true,\n                type: \"triangle\",\n            },\n        },\n    },\n\n    nodes: {\n        chosen: false,\n        color: {\n            background: \"#5c6470\",\n            border: \"#fff\",\n            hover: {\n                background: \"#f39200\",\n                border: \"#fff\",\n            },\n        },\n        shape: \"dot\",\n        size: 10,\n        borderWidth: 2,\n        labelHighlightBold: false,\n        font: {\n            color: \"#393e46\",\n            strokeWidth: 2,\n            size: 15,\n        },\n    },\n    physics: {\n        hierarchicalRepulsion: {\n            damping: 0.1,\n            springLength: 200,\n        },\n        solver: \"hierarchicalRepulsion\",\n        minVelocity: 0.15,\n    },\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\n\nexport const postAdvise = (pipfile, pipfileLock, runtime_environment) => {\n    const data = {\n        application_stack: {\n            requirements: pipfile,\n            requirements_format: \"pipenv\",\n            requirements_lock: pipfileLock,\n        },\n        runtime_environment: runtime_environment,\n    };\n\n    return axios.post(THOTH_URL + \"/advise/python\", data, {\n        params: {\n            recommendation_type: \"stable\",\n            limit: 500,\n        },\n        headers: {\n            accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\n\nexport const getPackageExists = async name => {\n    return axios\n        .get(THOTH_URL + \"/python/package/versions\", {\n            params: {\n                name: name,\n                per_page: 1,\n            },\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n        .then(res => {\n            return res.data.versions.length > 0;\n        })\n        .catch(() => false);\n};\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport SearchBar from \"../../../components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPackageExists } from \"../api\";\n\nexport const PackageSearch = () => {\n    const navigate = useNavigate();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [searchError, setSearchError] = useState(\"\");\n\n    const handleAnalyze = async () => {\n        // if no query\n        if (searchQuery === \"\") {\n            return;\n        }\n\n        const exists = await getPackageExists(searchQuery);\n\n        if (exists) {\n            navigate(\"/package/\" + searchQuery);\n        } else {\n            setSearchError(\"Thoth does not know about that package\");\n        }\n    };\n\n    const handleChange = e => {\n        setSearchQuery(e.target.value);\n        if (searchError !== \"\") {\n            setSearchError(\"\");\n        }\n    };\n\n    return (\n        <Grid container justifyContent=\"center\">\n            <Grid alignSelf=\"flex-start\" item xs={12}>\n                <Typography\n                    color=\"error\"\n                    variant=\"body1\"\n                    sx={{ minHeight: 30 }}\n                >\n                    {searchError ?? \"\"}\n                </Typography>\n            </Grid>\n            <Grid container spacing={2} item xs={12}>\n                <Grid item xs={12} md={10}>\n                    <SearchBar\n                        error={searchError !== \"\"}\n                        onChange={e => handleChange(e)}\n                        helpertext={\"Search for a Python package\"}\n                        type=\"search\"\n                        boxprops={{ mr: 2 }}\n                        lefticon={<SearchRoundedIcon />}\n                    />\n                </Grid>\n                <Grid item xs={12} md={2}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleAnalyze()}\n                        sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                    >\n                        <b>Analyze</b>\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst filter = createFilterOptions();\n\nexport default function ComboBox({\n    suggestions,\n    label,\n    help,\n    required,\n    error,\n    value,\n    setValue,\n}) {\n    suggestions = useMemo(() => {\n        return suggestions.map(suggestion => {\n            return {\n                title: suggestion,\n            };\n        });\n    }, [suggestions]);\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === \"string\") {\n                    setValue(newValue);\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({ title: newValue.inputValue });\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                const { inputValue } = params;\n                // Suggest the creation of a new value\n                const isExisting = options.some(\n                    option => inputValue === option.title,\n                );\n                if (inputValue !== \"\" && !isExisting) {\n                    filtered.push({\n                        inputValue,\n                        title: `Add \"${inputValue}\"`,\n                    });\n                }\n\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={suggestions ?? []}\n            getOptionLabel={option => {\n                // Value selected with enter, right from the input\n                if (typeof option === \"string\") {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            freeSolo\n            renderInput={params => (\n                <TextField\n                    fullWidth\n                    {...params}\n                    label={label}\n                    required={required}\n                    error={error !== undefined}\n                    helperText={help}\n                />\n            )}\n        />\n    );\n}\n\nComboBox.propTypes = {\n    suggestions: PropTypes.array,\n    label: PropTypes.string,\n    help: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.any,\n    value: PropTypes.string,\n    setValue: PropTypes.func,\n};\n","import {\n    Button,\n    Collapse,\n    Grid,\n    Paper,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, { useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\nimport { postAdvise } from \"../api\";\nimport ComboBox from \"./ComboBox/ComboBox\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"loading\":\n            return { ...state, loading: action.payload };\n        case \"error\":\n            return {\n                ...state,\n                error: { ...state.error, [action.param]: action.payload },\n            };\n        case \"clear-error\":\n            state.error = {};\n            return state;\n        case \"input\":\n            return {\n                ...state,\n                [action.param]: action.payload,\n                error: { ...state.error, [action.param]: undefined },\n            };\n        default:\n            throw new Error(\"Advise state dispatch error\");\n    }\n}\n\nexport const initState = {\n    error: {},\n    loading: false,\n    lookupType: \"id\",\n    operating_system_name: \"ubi\",\n    operating_system_version: \"8\",\n    platform: \"\",\n    python_version: \"3.8\",\n    cuda_version: \"\",\n    cudnn_version: \"\",\n    mkl_version: \"\",\n    name: \"\",\n    openblas_version: \"\",\n    openmpi_version: \"\",\n    base_image: \"\",\n};\n\nexport const AdviseCreation = () => {\n    const navigate = useNavigate();\n    const [state, dispatch] = useReducer(reducer, initState);\n\n    const isValid = () => {\n        if (state.lookupType === \"id\") {\n            if (!state.id || state.id === \"\") {\n                dispatch({\n                    type: \"error\",\n                    param: \"id\",\n                    payload: \"Field cant be empty\",\n                });\n                return false;\n            }\n        } else {\n            let valid = true;\n            if (!state.pipfile) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfile\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.pipfileLock) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"pipfileLock\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n            if (!state.name) {\n                valid = false;\n                dispatch({\n                    type: \"error\",\n                    param: \"name\",\n                    payload: \"Field cant be empty\",\n                });\n            }\n\n            return valid;\n        }\n\n        return true;\n    };\n\n    const handleAnalyze = async () => {\n        if (state.loading || !isValid()) {\n            return;\n        }\n\n        if (state.lookupType === \"id\") {\n            navigate(\"/advise/\" + state.id);\n        } else {\n            dispatch({ type: \"loading\", payload: true });\n            const runtime_environment = {\n                operating_system: {\n                    name: state.operating_system_name,\n                    version: state.operating_system_version,\n                },\n                platform: state.platform,\n                python_version: state.python_version,\n                base_image: state.base_image,\n                cuda_version: state.cuda_version,\n                cudnn_version: state.cudnn_version,\n                mkl_version: state.mkl_version,\n                name: state.name,\n                openblas_version: state.openblas_version,\n                openmpi_version: state.openmpi_version,\n            };\n\n            Object.keys(runtime_environment).forEach(key => {\n                if (runtime_environment[key] === \"\") {\n                    delete runtime_environment[key];\n                }\n            });\n            if (\n                runtime_environment[\"operating_system\"][\"name\"] === \"\" ||\n                runtime_environment[\"operating_system\"][\"version\"] === \"\"\n            ) {\n                delete runtime_environment[\"operating_system\"];\n            }\n\n            postAdvise(state.pipfile, state.pipfileLock, runtime_environment)\n                .then(response => {\n                    dispatch({ type: \"loading\", payload: false });\n                    navigate(\"/advise/\" + response.data.analysis_id);\n                })\n                .catch(error => {\n                    dispatch({ type: \"loading\", payload: false });\n                    if (error?.response?.status === 400) {\n                        if (\n                            error?.response?.data?.error?.includes(\n                                \"Pipfile.lock\",\n                            )\n                        ) {\n                            dispatch({\n                                type: \"error\",\n                                param: \"pipfileLock\",\n                                payload: error?.response?.data?.error,\n                            });\n                        } else if (\n                            error?.response?.data?.error?.includes(\"Pipfile\")\n                        ) {\n                            dispatch({\n                                type: \"error\",\n                                param: \"pipfile\",\n                                payload: error?.response?.data?.error,\n                            });\n                        }\n                    }\n                });\n        }\n    };\n\n    return (\n        <>\n            <Collapse in={state.lookupType === \"id\"}>\n                <>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item xs={12}>\n                            <Typography\n                                color=\"error\"\n                                variant=\"body1\"\n                                sx={{ minHeight: 30 }}\n                            >\n                                {state.error?.id}\n                            </Typography>\n                        </Grid>\n                        <Grid container item xs={12} spacing={2}>\n                            <Grid item xs={12} md={10}>\n                                <SearchBar\n                                    error={state.error?.id}\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"id\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    helpertext={\"Analysis ID\"}\n                                    type=\"search\"\n                                    boxprops={{ mr: 2 }}\n                                    lefticon={<SearchRoundedIcon />}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => handleAnalyze()}\n                                    sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                >\n                                    <b>Analyze</b>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        onClick={() =>\n                            dispatch({\n                                type: \"input\",\n                                param: \"lookupType\",\n                                payload: \"manual\",\n                            })\n                        }\n                    >\n                        New Advise\n                    </Button>\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"manual\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3}>\n                        Advise Parameters\n                    </Typography>\n                    <Paper\n                        sx={{\n                            backgroundColor: \"white\",\n                            padding: 3,\n                            marginBottom: 5,\n                        }}\n                        variant=\"outlined\"\n                    >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfile\n                                            ? state.error?.pipfile\n                                            : \"Pipfile contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfile\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={state.error?.pipfile !== undefined}\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfileLock\n                                            ? state.error?.pipfileLock\n                                            : \"Pipfile.lock contents\"\n                                    }\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"pipfileLock\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    error={\n                                        state.error?.pipfileLock !== undefined\n                                    }\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container mt={4} spacing={2}>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"base_image\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.base_image}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Base Image\"\n                                    required={false}\n                                    helperText=\"A base container image used to run the application.\"\n                                    error={state.error?.base_image}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cuda_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cuda_version}\n                                    suggestions={[\"9.0\"]}\n                                    label=\"CUDA Version\"\n                                    required={false}\n                                    help=\"Nvidia CUDA version which the application uses.\"\n                                    error={state.error?.cuda_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"cudnn_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.cudnn_version}\n                                    suggestions={[\"8\"]}\n                                    label=\"cuDNN Version\"\n                                    required={false}\n                                    help=\"NVIDIA cuDNN version used, if any.\"\n                                    error={state.error?.cudnn_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"mkl_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.mkl_version}\n                                    suggestions={[\"2021.1.1\"]}\n                                    label=\"MKL Version\"\n                                    required={false}\n                                    help=\"Intel® Math Kernel Library version used, if any.\"\n                                    error={state.error?.mkl_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"name\",\n                                            payload: e.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.name}\n                                    suggestions={[\"ubi:8-prod\"]}\n                                    label=\"Name\"\n                                    required={true}\n                                    help=\"User defined name of the runtime environment.\"\n                                    error={state.error?.name}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openblas_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openblas_version}\n                                    suggestions={[\"0.3.13\"]}\n                                    label=\"OpenBLAS Version\"\n                                    required={false}\n                                    help=\"OpenBLAS version used, if any.\"\n                                    error={state.error?.openblas_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"openmpi_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.openmpi_version}\n                                    suggestions={[\"4.1\"]}\n                                    label=\"Open MPI Version\"\n                                    required={false}\n                                    help=\"Open MPI version used, if any.\"\n                                    error={state.error?.openmpi_version}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_name\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_name}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Name\"\n                                    required={false}\n                                    helperText=\"Operating system name used.\"\n                                    error={state.error?.operating_system_name}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField\n                                    onChange={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"operating_system_version\",\n                                            payload: e.target.value,\n                                        })\n                                    }\n                                    value={state.operating_system_version}\n                                    sx={{ minWidth: \"100%\" }}\n                                    label=\"Operating System Version\"\n                                    required={false}\n                                    helperText=\"Operating system version used.\"\n                                    error={\n                                        state.error?.operating_system_version\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"platform\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.platform}\n                                    suggestions={[\"linux-x86_64\"]}\n                                    label=\"Platform\"\n                                    required={false}\n                                    help=\"Platform used - corresponds to sysconfig.get_platform() call.\"\n                                    error={state.error?.platform}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox\n                                    setValue={e =>\n                                        dispatch({\n                                            type: \"input\",\n                                            param: \"python_version\",\n                                            payload: e?.title ?? \"\",\n                                        })\n                                    }\n                                    value={state.python_version}\n                                    suggestions={[\n                                        \"2.7\",\n                                        \"3.6\",\n                                        \"3.7\",\n                                        \"3.8\",\n                                        \"3.9\",\n                                    ]}\n                                    label=\"Python Version\"\n                                    required={false}\n                                    help=\"Python version on which the application runs on.\"\n                                    error={state.error?.python_version}\n                                />\n                            </Grid>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={6} md={6}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                            dispatch({\n                                                type: \"input\",\n                                                param: \"lookupType\",\n                                                payload: \"id\",\n                                            })\n                                        }\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Cancel</b>\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <LoadingButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => handleAnalyze()}\n                                        loading={state.loading}\n                                        sx={{\n                                            minHeight: \"100%\",\n                                            minWidth: \"100%\",\n                                        }}\n                                    >\n                                        <b>Analyze</b>\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </>\n            </Collapse>\n        </>\n    );\n};\n","// react\nimport React, { useState } from \"react\";\n\n// material-ui\nimport {\n    Typography,\n    Grid,\n    Divider,\n    ToggleButtonGroup,\n    ToggleButton,\n    Box,\n} from \"@material-ui/core\";\n\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\n// local\nimport TabPanel from \"components/Elements/TabPanel\";\nimport logo from \"assets/thoth-logo.png\";\n\nimport { PackageSearch, AdviseCreation } from \"../components\";\n\nexport const Home = () => {\n    // utility states\n    const [mode, setMode] = useState(\"multiple\");\n\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n    // change mode view\n    const handleMode = (event, newMode) => {\n        if (newMode) {\n            setMode(newMode);\n        }\n    };\n\n    return (\n        <div\n            style={{\n                maxWidth: \"1000px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n            }}\n        >\n            <Grid container justifyContent=\"center\">\n                <Grid item>\n                    <Box sx={{ marginTop: 10 }}>\n                        <img\n                            alt=\"Thoth Logo\"\n                            src={logo}\n                            height={!matches ? \"auto\" : 300}\n                            width={\"100%\"}\n                        />\n                    </Box>\n                </Grid>\n                <Grid container item justifyContent=\"center\" mt={5} spacing={0}>\n                    <Grid container item sm={12} md={6} align=\"center\" mr={5}>\n                        <Grid item xs={12} align=\"left\" mb={3}>\n                            <Typography variant=\"h4\">\n                                <b>Thoth Search</b>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} align=\"left\">\n                            <Typography variant=\"subtitle1\">\n                                Thoth Search is a tool that runs analysis on a\n                                Python application. It utilizes package metadata\n                                and Thoth Adviser to analyse and recommend a\n                                software stack. You can run analysis on an\n                                entire Python application using a properly\n                                formatted Pipfile and Pipfile.lock.\n                                Alternatively, you can analyse a single Python\n                                package to see what Thoth knows about the\n                                package.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        item\n                        container\n                        sm={12}\n                        md={5}\n                        direction=\"column\"\n                        justifyContent=\"center\"\n                        spacing={1}\n                    >\n                        {[\n                            [\"One\", \"100k\"],\n                            [\"Two\", \"20%\"],\n                            [\"Three\", \"62\"],\n                            [\"Four\", \"N/A\"],\n                        ].map((stat, i) => {\n                            return (\n                                <Grid\n                                    item\n                                    container\n                                    alignItems=\"center\"\n                                    key={i}\n                                >\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"h6\">\n                                            <b>Thoth Statistic {stat[0]}</b>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"h5\" align=\"right\">\n                                            {stat[1]}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                    <Grid item xs={12} align=\"center\" mt={3} mb={4}>\n                        <ToggleButtonGroup\n                            value={mode}\n                            exclusive\n                            onChange={handleMode}\n                            size={!matches ? \"small\" : \"large\"}\n                        >\n                            <ToggleButton value=\"single\">\n                                <b>single package analysis</b>\n                            </ToggleButton>\n                            <ToggleButton value=\"multiple\">\n                                <b>Python application analysis</b>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Divider sx={{ marginBottom: 3 }} />\n                        <TabPanel value={mode} index=\"single\">\n                            <PackageSearch />\n                        </TabPanel>\n                        <TabPanel value={mode} index={\"multiple\"}>\n                            <AdviseCreation />\n                        </TabPanel>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport const NotFound = () => {\n    return <div>404</div>;\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        height: \"100%\",\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n/** Card template for metric cards. */\nconst InfoCard = ({ cardMeta, cardBody, cardAction }) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                action={cardAction}\n                title={<Typography variant=\"h5\">{cardMeta.title}</Typography>}\n                subheader={cardMeta.subTitle}\n            />\n            <CardContent>{cardBody}</CardContent>\n        </Card>\n    );\n};\n\nInfoCard.propTypes = {\n    /** card header info */\n    cardMeta: PropTypes.shape({\n        /** card title */\n        title: PropTypes.string.isRequired,\n        /** optional subtitle */\n        subTitle: PropTypes.string,\n    }),\n    /** optional card action component (usually some button) */\n    cardAction: PropTypes.node,\n    /** Card body content */\n    cardBody: PropTypes.node,\n};\n\nexport default InfoCard;\n","import React from \"react\";\n\n// material-ui\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// react\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\n/**\n * Text with an icon to the right of it.\n */\nconst IconText = ({ text, icon, link, className, ...props }) => {\n    const classes = useStyles();\n    return (\n        <div className={`${classes.root} ${className}`} {...props}>\n            {icon}\n            <Typography href={link ? link : null} variant=\"body2\" marginLeft>\n                {text}\n            </Typography>\n        </div>\n    );\n};\n\nexport default IconText;\n\nIconText.propTypes = {\n    /** The text shown */\n    text: PropTypes.string.isRequired,\n    /** The icon component to be displayed */\n    icon: PropTypes.node.isRequired,\n    /** Optional link if text is selected */\n    link: PropTypes.string,\n    /** additional styling */\n    className: PropTypes.string,\n};\n","export function formatLockfile(lockfile) {\n    return Object.entries(lockfile.requirements_locked.default).map(\n        ([key, value]) => {\n            return {\n                name: key,\n                version: value.version.replace(\"==\", \"\"),\n                index: \"https://pypi.org/simple\", //TODO no hard code\n                os_name: lockfile.runtime_environment.operating_system.name,\n                os_version:\n                    lockfile.runtime_environment.operating_system.version,\n                python_version: lockfile.runtime_environment.python_version,\n            };\n        },\n    );\n}\n","export default function timeSince(date) {\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = seconds / 31536000;\n\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" year\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 2592000;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" month\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 86400;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" day\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 3600;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" hour\" + (num !== 1 ? \"s\" : \"\");\n    }\n    interval = seconds / 60;\n    if (interval > 1) {\n        const num = Math.floor(interval);\n        return num + \" minute\" + (num !== 1 ? \"s\" : \"\");\n    }\n    const num = Math.floor(seconds);\n    return num + \" second\" + (num !== 1 ? \"s\" : \"\");\n}\n","import timeSince from \"utils/timeSince\";\n\n/**\n * Given either a date and time, calculated time since that date.\n * This is used to calculate how long ago an Advisor document was generated or has been generating.\n * It is specific to the document formatting\n *\n * @param {string} finished_at - for when the advise document is completed\n * @param {string} started_at - the time at which the document was started (is preceded by finished at)\n * @param {string} datetime - fallback to datetime\n * @returns {string} - English version of date\n */\nexport const calcTime = (finished_at, started_at, datetime) => {\n    // if status says finished\n    if (finished_at) {\n        return \"Advise finished \" + timeSince(new Date(finished_at)) + \" ago.\";\n    }\n    // if status is pending\n    else if (started_at) {\n        return \"Advise started \" + timeSince(new Date(started_at)) + \" ago.\";\n    }\n    // if status is nulled so use metadata end date\n    else if (datetime) {\n        return (\n            \"Advise finished \" + timeSince(new Date(datetime + \"Z\")) + \" ago.\"\n        );\n    } else {\n        return \"Time started/finished not available\";\n    }\n};\n","const whyRemoved = (start, packages) => {\n    const visited = new Map();\n    const visitList = [];\n\n    visitList.push(start);\n\n    const reasonNodes = [];\n\n    while (visitList.length !== 0) {\n        const node = visitList.pop();\n        if (node && !visited.has(node)) {\n            visited.set(node);\n\n            if (node.value.change === \"version\") {\n                reasonNodes.push(node);\n            } else {\n                node.parents.forEach(adj => {\n                    if (adj === \"*App\") {\n                        if (node.key !== start.key) {\n                            reasonNodes.push(node);\n                        }\n                        return;\n                    }\n                    visitList.push(packages.get(adj));\n                });\n            }\n        }\n    }\n\n    return reasonNodes.map(node => {\n        const reason =\n            node.value.change === \"version\"\n                ? \" had its version changed to \" +\n                  node.value.version +\n                  \" from \" +\n                  node.value.oldVersion +\n                  \". Version \" +\n                  node.value.oldVersion +\n                  \" of \" +\n                  node.key +\n                  \" included package \" +\n                  start.value.label +\n                  \" as a dependency, where version \" +\n                  node.value.version +\n                  \" does not. \"\n                : \" did not have any dependents and was removed by the Thoth resolver.\";\n        return {\n            package: node.key,\n            reason: reason,\n        };\n    });\n};\n\nexport const discoverPackageChanges = (nodes, justifications) => {\n    if (!nodes || !justifications) {\n        return;\n    }\n\n    const justifiedPackages = new Map();\n    justifications.forEach(justification => {\n        if (justification.package_name) {\n            if (justifiedPackages.has(justification.package_name)) {\n                justifiedPackages.set(justification.package_name, [\n                    ...justifiedPackages.get(justification.package_name),\n                    justification,\n                ]);\n            } else {\n                justifiedPackages.set(justification.package_name, [\n                    justification,\n                ]);\n            }\n        }\n    });\n\n    nodes.forEach(node => {\n        let justification = {\n            package: node.key,\n        };\n\n        if (node.value.change === \"removed\") {\n            // set header\n            justification.header = `${node.value.label} was ${\n                node.value.depth === 0 ? \"directly\" : \"indirectly\"\n            } removed by Thoth resolver.`;\n\n            // set reasons for removal\n            justification.reasons = whyRemoved(node, nodes);\n\n            // if no reasons for removal\n            if (justification.reasons.length === 0) {\n                justification.header = `${node.value.label} was removed for an unknown reason. The package does not have dependents in the Pipfile.lock.`;\n            }\n        }\n        // if added\n        else if (node.value.change === \"added\") {\n            justification.header = `${node.value.label} was added to the Pipfile.lock by Thoth resolver.`;\n        }\n\n        // if added\n        else if (node.value.change === \"version\") {\n            justification.header = `${node.key} had its version changed from ${node.value.oldVersion} to ${node.value.version}.`;\n        }\n\n        // if unchanged\n        else {\n            justification.header =\n                \"Thoth resolver did not remove or change package \" +\n                node.value.label +\n                \".\";\n        }\n\n        // check if there is a justification for change\n        if (justifiedPackages.has(node.key)) {\n            const reasons = justifiedPackages.get(node.key);\n            justification = {\n                ...justification,\n                thoth: reasons,\n            };\n        }\n\n        node.value.justifications = justification;\n    }, []);\n};\n","import React from \"react\";\nimport { Button, Alert } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom alert card.\n */\nconst CustomAlert = ({ info, ...props }) => {\n    return (\n        <Alert\n            className={props?.className}\n            action={\n                <Button color=\"inherit\" size=\"small\" href={info?.link}>\n                    DETAILS\n                </Button>\n            }\n            severity={info.type.toLowerCase()}\n        >\n            {info?.message}\n        </Alert>\n    );\n};\n\nCustomAlert.propTypes = {\n    /** The alert content. */\n    info: PropTypes.shape({\n        /** Link to navigate to if alert is actioned on. */\n        link: PropTypes.string.isRequired,\n        /** Text displayed in the alert. */\n        message: PropTypes.string.isRequired,\n        /** Severity (color) of alert: `[\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"]`. */\n        type: PropTypes.oneOf([\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"])\n            .isRequired,\n    }).isRequired,\n    /** The `material-ui` styling classname */\n    className: PropTypes.string,\n};\n\nexport default CustomAlert;\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Chip, Button, Collapse } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport FeedRoundedIcon from \"@mui/icons-material/FeedRounded\";\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { calcTime } from \"../../utils\";\n\n// local\nimport CustomAlert from \"./CustomAlert\";\nimport PropTypes from \"prop-types\";\n\n// component styling\n\nconst useStyles = makeStyles(theme => ({\n    titleRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: theme.spacing(1),\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    marginRight: {\n        marginRight: theme.spacing(2),\n    },\n    linksRow: {\n        display: \"flex\",\n        marginBottom: theme.spacing(3),\n        alignItems: \"center\",\n    },\n    alert: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const AdviseHeader = ({ adviseDocument, logs }) => {\n    const classes = useStyles();\n    const [expandAlerts, setExpandAlerts] = React.useState(false);\n    const [showLogs, setShowLogs] = React.useState(false);\n    const [selectedLine, setSelectedLine] = React.useState();\n\n    // get status of the report\n    const [statusText, statusColor] = useMemo(() => {\n        // if report is done\n        if (adviseDocument?.result?.report) {\n            if (adviseDocument.result.report.ERROR) {\n                return [\"ERROR\", \"error\"];\n            } else {\n                return [\"COMPLETE\", \"success\"];\n            }\n        } else if (adviseDocument?.result?.error) {\n            return [\"ERROR\", \"error\"];\n        }\n        // if report is not done\n        else if (adviseDocument?.status?.state) {\n            return [adviseDocument.status.state.toUpperCase(), \"info\"];\n        } else {\n            return [\"UNKNOWN\", undefined];\n        }\n    }, [adviseDocument]);\n\n    // get alerts from report\n    const alerts = useMemo(() => {\n        if (adviseDocument?.result?.report) {\n            return adviseDocument?.result?.report?.stack_info\n                ? adviseDocument?.result?.report.stack_info.filter(alert => {\n                      return alert.type === \"ERROR\";\n                  })\n                : null;\n        }\n    }, [adviseDocument]);\n\n    return (\n        <div>\n            <Typography variant=\"h4\">\n                <b>\n                    {adviseDocument?.metadata?.document_id ??\n                        adviseDocument?.parameters?.analysis_id}\n                </b>\n            </Typography>\n            <div className={classes.linksRow}>\n                <Chip label={statusText} color={statusColor} />\n                <IconText\n                    className={classes.marginLeft}\n                    text={calcTime(\n                        adviseDocument?.status?.finished_at,\n                        adviseDocument?.status?.started_at,\n                        adviseDocument?.metadata?.datetime,\n                    )}\n                    icon={<AccessTimeIcon />}\n                />\n                <Button\n                    sx={{ marginLeft: 2 }}\n                    onClick={() => setShowLogs(!showLogs)}\n                >\n                    <IconText text=\"Logs\" icon={<FeedRoundedIcon />} />\n                </Button>\n            </div>\n            <Typography variant={\"subtitle2\"}>\n                {adviseDocument?.result?.report?.ERROR ??\n                    adviseDocument?.error ??\n                    adviseDocument?.result?.error_msg}\n            </Typography>\n            {alerts?.length > 0 ? (\n                <div>\n                    <CustomAlert info={alerts[0]} />\n                    <Collapse in={expandAlerts} timeout=\"auto\" unmountOnExit>\n                        {alerts?.slice(1).map((info, i) => {\n                            return (\n                                <CustomAlert\n                                    key={i}\n                                    info={info}\n                                    className={classes.alert}\n                                />\n                            );\n                        })}\n                    </Collapse>\n\n                    <Button\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => setExpandAlerts(!expandAlerts)}\n                    >\n                        {alerts?.length > 1\n                            ? expandAlerts\n                                ? \"LESS\"\n                                : \"MORE\"\n                            : null}\n                    </Button>\n                </div>\n            ) : null}\n\n            <Collapse in={showLogs}>\n                {logs?.split(\"\\n\").map((line, i) => {\n                    return (\n                        <Typography\n                            key={i}\n                            noWrap={selectedLine !== i}\n                            onClick={() =>\n                                setSelectedLine(\n                                    selectedLine === i ? undefined : i,\n                                )\n                            }\n                            variant=\"body2\"\n                            sx={{\n                                backgroundColor:\n                                    selectedLine === i\n                                        ? \"lightyellow\"\n                                        : i % 2 === 0\n                                        ? \"lightgray\"\n                                        : \"unset\",\n                            }}\n                        >\n                            {line}\n                        </Typography>\n                    );\n                }) ?? \"Advisor log is not available.\"}\n            </Collapse>\n\n            {statusText === \"COMPLETE\" ? (\n                <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n                    Thoth has added and removed packages from the original\n                    Pipfile.lock, resulting in a <i>new</i> Pipfile.lock. Switch\n                    between the new and old Python environments to see the\n                    differences.\n                </Typography>\n            ) : null}\n        </div>\n    );\n};\n\nAdviseHeader.propTypes = {\n    /** the Advise document id*/\n    adviseDocument: PropTypes.object.isRequired,\n    logs: PropTypes.string,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport { LinearProgress, Typography, Grid } from \"@material-ui/core\";\n\nconst CustomLinearProgress = withStyles(theme => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor:\n            theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#1a90ff\",\n    },\n}))(LinearProgress);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(6,1fr)\",\n        alignItems: \"center\",\n        gridGap: theme.spacing(1),\n    },\n    label: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n    value: {\n        textAlign: \"end\",\n    },\n}));\n\n/**\n * A horizontal bar for showing a percent of a total.\n */\nconst ProgressBar = ({ value, total, label, action }) => {\n    const classes = useStyles();\n    return (\n        <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs={5}>\n                <Typography variant=\"body2\" className={classes.label}>\n                    {label}\n                </Typography>\n            </Grid>\n            <Grid item xs={1.75}>\n                <Typography className={classes.value} variant=\"body2\">\n                    {value}\n                </Typography>\n            </Grid>\n            <Grid item xs>\n                <CustomLinearProgress\n                    variant=\"determinate\"\n                    value={total > 0 ? (value / total) * 100 : 0}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <div>{action ?? null}</div>\n            </Grid>\n        </Grid>\n    );\n};\n\nProgressBar.propTypes = {\n    /** the amount (numerator) for the bar */\n    value: PropTypes.number.isRequired,\n    /** the total (denominator) for the bar */\n    total: PropTypes.number.isRequired,\n    /** optional label */\n    label: PropTypes.string,\n    /** action used on card */\n    action: PropTypes.node,\n};\n\nexport default ProgressBar;\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { Typography, Divider, Skeleton, Box } from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n/**\n * A metric card that aggregates changes between the initial dependency\n * graph and the Thoth made dependency graph.\n */\nexport const AdviseMetric = ({ metric }) => {\n    const total =\n        metric?.added + metric?.removed + metric?.version + metric?.unchanged;\n    const justTotal = Object.values(metric?.justification ?? {}).reduce(\n        (a, b) => a + b,\n        0,\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"body2\" gutterBottom>\n                {metric?.build}\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom mt={2}>\n                What Thoth Changed\n            </Typography>\n            <Divider mb={1} />\n            <ProgressBar\n                value={metric?.added ?? 0}\n                total={total}\n                label={\"Added Packages\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.removed ?? 0}\n                total={total}\n                label={\"Removed Packages\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={metric?.version ?? 0}\n                total={total}\n                label={\"Version Changes\"}\n            />\n            <Typography variant=\"h6\" mt={3} gutterBottom>\n                Justification Counts\n            </Typography>\n            <Divider mb={1} />\n            {Object.entries(metric?.justification ?? {}).map(([key, value]) => {\n                return (\n                    <ProgressBar\n                        key={key}\n                        value={value}\n                        total={justTotal}\n                        label={key}\n                        mb={1}\n                    />\n                );\n            })}\n        </>\n    );\n};\n\nAdviseMetric.propTypes = {\n    /** The metric object info of aggregated data */\n    metric: PropTypes.shape({\n        /** The number of new dependencies */\n        added: PropTypes.number,\n        /** The number of removed dependencies */\n        removed: PropTypes.number,\n        /** The number of dependencies whose version was changed*/\n        version: PropTypes.number,\n        /** The number of dependencies that did not change*/\n        unchanged: PropTypes.number,\n        /** The number Thoth justification (warnings) that were produced */\n        justification: PropTypes.object,\n        /** which build is being displayed (new or old) */\n        build: PropTypes.string,\n    }),\n};\n","import React from \"react\";\n\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A button group for toggling between old and new dependency graphs.\n * It takes two parameters, a callback function and a state variable.\n */\nexport const CustomCardAction = ({ value, onChange }) => {\n    return (\n        <ToggleButtonGroup\n            value={value}\n            exclusive\n            size=\"small\"\n            onChange={onChange}\n        >\n            <ToggleButton value=\"oldGraph\">Old</ToggleButton>\n            <ToggleButton value=\"newGraph\">New</ToggleButton>\n        </ToggleButtonGroup>\n    );\n};\n\nCustomCardAction.propTypes = {\n    /** The state variable the buttons use to control the active value */\n    value: PropTypes.string.isRequired,\n    /** The callback function that runs when a button is changed */\n    onChange: PropTypes.func.isRequired,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n// material-ui\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport {\n    Typography,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    Grid,\n    Collapse,\n    Box,\n    Skeleton,\n} from \"@material-ui/core\";\n\n/**\n * A metric card that displays direct, indirect, and root packages of a dependency graph.\n */\nexport const DependenciesMetric = ({ all, roots }) => {\n    const totalDependencies =\n        (all?.direct ?? 0) + (all?.indirect ?? 0) + (all?.roots ?? 0);\n\n    if (!all || !roots) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                All Packages\n            </Typography>\n            <Divider mb={1} />\n            <ProgressBar\n                value={all?.roots ?? 0}\n                total={totalDependencies}\n                label={\"Root\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={all?.direct ?? 0}\n                total={totalDependencies}\n                label={\"Direct\"}\n                mb={1}\n            />\n            <ProgressBar\n                value={all?.indirect ?? 0}\n                total={totalDependencies}\n                label={\"Indirect\"}\n            />\n            <Typography variant=\"h6\" gutterBottom mt={2}>\n                Root Packages\n            </Typography>\n            <Divider mb={1} />\n            <List component=\"nav\">\n                <TransitionGroup>\n                    {Object.entries(roots ?? {})?.map(([key]) => {\n                        const t =\n                            (roots[key].direct ?? 0) +\n                            (roots[key].indirect ?? 0);\n                        return (\n                            <Collapse key={key}>\n                                <div>\n                                    <ListItem>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs>\n                                                <ListItemText primary={key} />\n                                            </Grid>\n                                            <Grid item xs>\n                                                <Grid\n                                                    container\n                                                    direction=\"column\"\n                                                >\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                roots?.[key]\n                                                                    ?.direct ??\n                                                                0\n                                                            }\n                                                            total={t}\n                                                            label={\"Direct\"}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <ProgressBar\n                                                            value={\n                                                                roots?.[key]\n                                                                    ?.indirect ??\n                                                                0\n                                                            }\n                                                            total={t}\n                                                            label={\"Indirect\"}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </ListItem>\n                                    <Divider variant={\"middle\"} mb={1} />\n                                </div>\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </List>\n        </>\n    );\n};\n\nDependenciesMetric.propTypes = {\n    /** summary object of all roots aggregated */\n    all: PropTypes.shape({\n        /** number of dependencies directly related to root packages */\n        direct: PropTypes.number,\n        /** number of dependencies directly or indirectly related to the direct packages*/\n        indirect: PropTypes.number,\n        /** number of dependencies that have no dependents*/\n        roots: PropTypes.number,\n    }),\n    /** an object of key (package name) value pairs of specific roots with direct and indirect parameters for each value */\n    roots: PropTypes.objectOf(\n        PropTypes.shape({\n            /** roots own direct packages */\n            direct: PropTypes.number,\n            /** roots own indirect packages */\n            indirect: PropTypes.number,\n        }),\n    ),\n};\n","import React from \"react\";\n\n// material-ui\nimport { Divider, Collapse, Chip, Grid, Box } from \"@material-ui/core\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\nimport HelpOutlineRoundedIcon from \"@material-ui/icons/HelpOutlineRounded\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom list item displaying the number of packages under a particular license.\n */\nconst LicenseGroup = ({ name, metadata, packages, totalLicenses }) => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <Grid container>\n            <Grid item xs={1}>\n                {metadata?.isOsiApproved === null ? (\n                    <HelpOutlineRoundedIcon />\n                ) : metadata?.isOsiApproved ? (\n                    <CheckRoundedIcon />\n                ) : null}\n            </Grid>\n            <Grid item xs>\n                <Box onClick={() => setOpen(!open)}>\n                    <ProgressBar\n                        key={name}\n                        value={Object.keys(packages).length ?? 0}\n                        total={totalLicenses}\n                        label={name}\n                        action={open ? <ExpandLess /> : <ExpandMore />}\n                    />\n                </Box>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <Box my={1}>\n                        {Object.entries(packages)\n                            .sort((a, b) => {\n                                return a[1] - b[1];\n                            })\n                            .map(([k, v]) => {\n                                return (\n                                    <Chip\n                                        key={k}\n                                        sx={{ margin: 0.5 }}\n                                        color={\n                                            v.depth === 0\n                                                ? \"primary\"\n                                                : v.depth === 1\n                                                ? \"secondary\"\n                                                : \"default\"\n                                        }\n                                        label={k}\n                                    />\n                                );\n                            })}\n                    </Box>\n                    <Divider />\n                </Collapse>\n            </Grid>\n        </Grid>\n    );\n};\n\nLicenseGroup.propTypes = {\n    /** The license name */\n    name: PropTypes.string.isRequired,\n    /** License specific infomration */\n    metadata: PropTypes.shape({\n        /** If license is approved by OSI standards */\n        isOsiApproved: PropTypes.bool,\n    }),\n    /** The packages that use this license as an object */\n    packages: PropTypes.objectOf(\n        PropTypes.shape({\n            depth: PropTypes.number.isRequired,\n        }),\n    ).isRequired,\n    /** The total number of packages that have licenses. (used to add a total to the metric bar) */\n    totalLicenses: PropTypes.number.isRequired,\n};\n\nexport default LicenseGroup;\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport {\n    Typography,\n    Divider,\n    Collapse,\n    Button,\n    Box,\n    Grid,\n    Skeleton,\n} from \"@material-ui/core\";\nimport { TransitionGroup } from \"react-transition-group\";\n\n// local\nimport LicenseGroup from \"./LicenseGroup\";\n\n/**\n * A metric card that visualizes license data for all packages in the graph.\n */\nexport const LicenseMetric = ({ metric }) => {\n    const [more, setMore] = React.useState(false);\n\n    const licenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).sort((a, b) => {\n                return Object.keys(b[1]).length - Object.keys(a[1]).length;\n            }),\n        [metric],\n    );\n\n    const totalLicenses = useMemo(\n        () =>\n            Object.entries(metric ?? {}).reduce((sum, [, val]) => {\n                return sum + Object.keys(val.packages).length;\n            }, 0),\n        [metric],\n    );\n\n    if (!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={1}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        OSI\n                    </Typography>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Dependency Licenses\n                    </Typography>\n                </Grid>\n            </Grid>\n\n            <Divider />\n            <TransitionGroup>\n                {licenses?.slice(0, 10).map(([key, value]) => {\n                    return (\n                        <Collapse key={key}>\n                            <LicenseGroup\n                                name={key}\n                                metadata={value.metadata}\n                                packages={value.packages}\n                                totalLicenses={totalLicenses}\n                            />\n                        </Collapse>\n                    );\n                })}\n            </TransitionGroup>\n\n            <Collapse in={more} timeout=\"auto\" unmountOnExit>\n                <TransitionGroup>\n                    {licenses.slice(10).map(([key, value]) => {\n                        return (\n                            <Collapse key={key}>\n                                <LicenseGroup\n                                    name={key}\n                                    metadata={value.metadata}\n                                    packages={value.packages}\n                                    totalLicenses={totalLicenses}\n                                />\n                            </Collapse>\n                        );\n                    })}\n                </TransitionGroup>\n            </Collapse>\n            <Box textAlign=\"center\">\n                <Button onClick={() => setMore(!more)} color=\"primary\">\n                    {more ? \"Less\" : \"More\"}\n                </Button>\n            </Box>\n        </div>\n    );\n};\n\nLicenseMetric.propTypes = {\n    /** Key value pairs of license names (keys) and license information (values).*/\n    metric: PropTypes.objectOf(\n        PropTypes.shape({\n            metadata: PropTypes.object,\n            packages: PropTypes.object.isRequired,\n        }),\n    ),\n};\n","function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n","import React from \"react\";\n\nimport {\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Box,\n    TableCell,\n} from \"@material-ui/core\";\n\nimport { visuallyHidden } from \"@material-ui/utils\";\n\nimport PropTypes from \"prop-types\";\n\nconst headCells = [\n    {\n        id: \"name\",\n        numeric: false,\n        label: \"Package\",\n    },\n    {\n        id: \"depth\",\n        numeric: true,\n        label: \"Depth\",\n    },\n    {\n        id: \"license\",\n        numeric: false,\n        label: \"License\",\n    },\n    {\n        id: \"dependencies\",\n        numeric: true,\n        label: \"Direct Dependencies\",\n    },\n];\n\n/**\n * A specific custom table header for packages.\n * It handles sorting individual columns.\n */\nfunction EnhancedTableHead({ order, orderBy, onRequestSort }) {\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding=\"normal\"\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    /** the function used to sort an individual column */\n    onRequestSort: PropTypes.func.isRequired,\n    /** the order in which the column is sorted on*/\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    /** The column in which to order the table by */\n    orderBy: PropTypes.string.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/**\n * Graph node/vertex that hold adjacencies nodes\n * For performance, uses a HashSet instead of array for adjacents.\n */\nexport class Node {\n    constructor(key, value) {\n        this.adjacents = new Set(); // adjacency list\n        this.key = key; // key\n        this.value = value;\n    }\n\n    /**\n     * Add node to adjacency list\n     * Runtime: O(1)\n     * @param {Node} node\n     */\n    addAdjacent(node) {\n        this.adjacents.add(node);\n    }\n\n    /**\n     * Check if a Node is adjacent to other\n     * Runtime: O(1)\n     * @param {Node} node\n     */\n    isAdjacent(node) {\n        return this.adjacents.has(node);\n    }\n\n    /**\n     * Get all adjacent nodes\n     */\n    getAdjacents() {\n        return Array.from(this.adjacents);\n    }\n}\n","// react\nimport React from \"react\";\n\nimport { Typography, Grid } from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport PropTypes from \"prop-types\";\nimport { Node } from \"utils/Node\";\n\n/**\n * Graph hover model appears when you hover over a node on the graph.\n */\nconst Popup = ({ node }) => {\n    return (\n        <div>\n            <Grid container alignItems=\"center\">\n                <Grid item xs={6}>\n                    <Typography variant=\"h6\">\n                        <b>{node.value.id}</b>\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography ml={2} variant=\"body1\">\n                        v{node.value.version ?? \"NaN\"}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Typography gutterBottom variant=\"body2\">\n                {node.value?.metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <IconText\n                        text={node.value?.metadata?.License ?? \"NaN\"}\n                        icon={<GavelIcon />}\n                    />\n                </Grid>\n                <Grid item>\n                    <IconText\n                        ml={2}\n                        text={\n                            node.value?.latestVersion\n                                ? \"Latest version is installed\"\n                                : \"Installed version is NOT the latest.\"\n                        }\n                        icon={<BookmarkIcon />}\n                    />\n                </Grid>\n            </Grid>\n            <Typography variant=\"body2\" mt={2}>\n                {node.value?.justifications?.header}\n            </Typography>\n        </div>\n    );\n};\n\nPopup.propTypes = {\n    node: PropTypes.objectOf(Node),\n};\n\nexport default Popup;\n","import { Node } from \"utils/Node\";\n\n/**\n * Graph data structure implemented with an adjacent list\n */\nexport class Graph {\n    constructor() {\n        this.nodes = new Map();\n    }\n\n    /**\n     * Add a node to the graph.\n     */\n    addVertex(key, value) {\n        if (this.nodes.has(key)) {\n            return this.nodes.get(key);\n        }\n\n        const vertex = new Node(key, value);\n        this.nodes.set(key, vertex);\n        return vertex;\n    }\n\n    /**\n     * Create a connection between the source node and the destination node.\n     * If the nodes don't exist, then it will make them on the fly.\n     */\n    addEdge(source, destination) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n\n        sourceNode.addAdjacent(destinationNode);\n\n        return [sourceNode, destinationNode];\n    }\n\n    /**\n     * True if two nodes are adjacent.\n     */\n    areAdjacents(source, destination) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n\n        if (sourceNode && destinationNode) {\n            return sourceNode.isAdjacent(destinationNode);\n        }\n\n        return false;\n    }\n\n    /**\n     * Generic graph search where we can pass a bfs or dfs\n     */\n    *graphSearch(first, type = \"bfs\") {\n        const visited = new Map();\n        const visitList = [];\n\n        visitList.push(first);\n\n        while (visitList.length !== 0) {\n            const node = type === \"dfs\" ? visitList.pop() : visitList.shift();\n            if (node && !visited.has(node)) {\n                yield node;\n                visited.set(node);\n                node.getAdjacents().forEach(adj => visitList.push(adj));\n            }\n        }\n    }\n\n    /**\n     * Find a path between source and destination\n     * It might not be the optimal path\n     */\n    findPath(source, destination, path = new Map()) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Map(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.set(sourceNode);\n\n        if (source === destination) {\n            return Array.from(newPath.keys());\n        }\n\n        // eslint-disable-next-line no-restricted-syntax\n        for (const node of sourceNode.getAdjacents()) {\n            if (!newPath.has(node)) {\n                const nextPath = this.findPath(\n                    node.value,\n                    destination,\n                    newPath,\n                );\n                if (nextPath.length) {\n                    return nextPath;\n                }\n            }\n        }\n\n        return [];\n    }\n\n    findAllNodesOnAllPaths(source, destination, visited = new Map()) {\n        const visitList = [];\n\n        visitList.push(source);\n\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node.key === destination) {\n                continue;\n            }\n            if (node && !visited.has(node.key)) {\n                visited.set(node.key, node);\n                node.parents.forEach(parent =>\n                    visitList.push(this.nodes.get(parent)),\n                );\n            }\n        }\n\n        return visited;\n    }\n\n    /**\n     * Find all paths from source to destination\n     */\n    findAllPaths(source, destination, path = new Map()) {\n        const sourceNode = this.nodes.get(source);\n        const destinationNode = this.nodes.get(destination);\n        const newPath = new Map(path);\n\n        if (!destinationNode || !sourceNode) return [];\n\n        newPath.set(sourceNode);\n\n        if (source === destination) {\n            return [Array.from(newPath.keys())];\n        }\n\n        const paths = [];\n        sourceNode.getAdjacents().forEach(node => {\n            if (!newPath.has(node)) {\n                const nextPaths = this.findAllPaths(\n                    node.value.id,\n                    destination,\n                    newPath,\n                );\n                nextPaths.forEach(nextPath => {\n                    paths.push(nextPath);\n                });\n            }\n        });\n        return paths;\n    }\n}\n","// react\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// utils and configs\nimport { options } from \"config\";\n\n// vis-network\nimport { Network, DataSet } from \"vis-network/standalone\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/styles\";\n\n// local\nimport Popup from \"../Popup\";\nimport { SelectedPackageContext } from \"../../../routes/AdviseDetails\";\nimport PropTypes from \"prop-types\";\nimport { Graph } from \"utils/Graph\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n    },\n    canvas: {\n        flex: \"1 1 auto\",\n        height: \"50vh\",\n    },\n}));\n\n/**\n * Renders a network graph visualization using `vis-network`.\n */\nconst NetworkGraph = ({ mergedGraph, ...props }) => {\n    const classes = useStyles();\n    const visJsRef = useRef(null);\n    const { selected } = useContext(SelectedPackageContext);\n\n    // create the graph\n    useEffect(() => {\n        if (!selected || !mergedGraph) {\n            return;\n        }\n\n        const selectedNode = mergedGraph.nodes.get(selected);\n\n        let nodes = mergedGraph.findAllNodesOnAllPaths(selectedNode, \"*App\");\n\n        nodes.set(\"*App\", mergedGraph.nodes.get(\"*App\"));\n\n        // convert to vis graph format\n        const convertedNodes = new DataSet();\n        nodes.forEach(value => {\n            // popup element\n            const popup = document.createElement(\"div\");\n            ReactDOM.render(<Popup node={value} />, popup);\n\n            // default colors\n            let color = value.value.color ?? options.nodes.color;\n            let font = undefined;\n\n            // if node is root\n            if (value.key === \"*App\") {\n                color = \"#4fc1ea\";\n                font = { color: \"#4fc1ea\", strokeWidth: 3, size: 20 };\n            }\n            // if selected node\n            else if (value.key === selectedNode.key) {\n                color = \"#f39200\";\n            }\n\n            convertedNodes.add({\n                ...value.value,\n                color: color,\n                title:\n                    value.key === selectedNode.key || value.key === \"*App\"\n                        ? undefined\n                        : popup,\n                font: font,\n            });\n        });\n        const visData = {\n            nodes: convertedNodes,\n            edges: new DataSet(mergedGraph.visEdges),\n        };\n\n        const network =\n            visJsRef.current && new Network(visJsRef.current, visData, options);\n\n        // change curser when hovering and grabbing\n        // Get the canvas HTML element\n        var networkCanvas = document\n            .getElementById(\"mynetwork\")\n            .getElementsByTagName(\"canvas\")[0];\n\n        // changes the curser graphic depedning on where and what the mouse is doing\n        function changeCursor(newCursorStyle) {\n            networkCanvas.style.cursor = newCursorStyle;\n        }\n        network.on(\"hoverNode\", function () {\n            changeCursor(\"grab\");\n        });\n        network.on(\"blurNode\", function () {\n            changeCursor(\"default\");\n        });\n        network.on(\"dragStart\", function () {\n            changeCursor(\"grabbing\");\n        });\n        network.on(\"dragging\", function () {\n            changeCursor(\"grabbing\");\n        });\n        network.on(\"dragEnd\", function () {\n            changeCursor(\"grab\");\n        });\n\n        // fix (stick in place) node when done dragging\n        network.on(\"dragEnd\", function (params) {\n            if (\n                params.nodes.length !== 0 &&\n                !network.isCluster(params.nodes[0])\n            ) {\n                network.editNode(params.nodes[0]);\n            }\n        });\n\n        // hover over node\n        network.on(\"dragEnd\", function (params) {\n            if (\n                params.nodes.length !== 0 &&\n                !network.isCluster(params.nodes[0])\n            ) {\n                network.editNode(params.nodes[0]);\n            }\n        });\n    }, [selected, mergedGraph]);\n\n    return (\n        <div className={`${classes.root} ${props.className}`}>\n            <div ref={visJsRef} id=\"mynetwork\" className={classes.canvas} />\n        </div>\n    );\n};\n\nNetworkGraph.propTypes = {\n    mergedGraph: PropTypes.objectOf(Graph),\n    className: PropTypes.any,\n};\n\nexport default NetworkGraph;\n","// React\nimport React, { useContext, useMemo } from \"react\";\n\n// material-ui\nimport { Typography, Grid, Box, Paper, Link, Button } from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport NetworkGraphView from \"../NetworkGraphView\";\n\n// redux\nimport { SelectedPackageContext } from \"../../../routes/AdviseDetails\";\nimport PropTypes from \"prop-types\";\nimport { Graph } from \"utils/Graph\";\n\n/**\n * Renders the selected package context variable's data. It will preform\n * a search of the list of packages using the selected package variable.\n */\nexport const SelectedPackage = ({ mergedGraph }) => {\n    const { selected, setSelected } = useContext(SelectedPackageContext);\n\n    const selectedPackage = mergedGraph.nodes.get(selected);\n\n    const dependents = { removed: [], added: [], version: [], unchanged: [] };\n    [...(selectedPackage?.parents ?? [])]\n        .filter(p => p !== \"*App\")\n        .forEach(node => {\n            dependents[mergedGraph.nodes.get(node).value.change].push(node);\n        });\n\n    const justifications = useMemo(() => {\n        const justs = {};\n        selectedPackage?.value?.justifications?.thoth?.forEach(just => {\n            justs[just.type] = [...(justs[just.type] ?? []), just];\n        });\n\n        return justs;\n    }, [selectedPackage]);\n\n    return (\n        <Box>\n            <Paper sx={{ padding: 2 }}>\n                <Grid container alignItems=\"center\" mb={1}>\n                    <Grid item>\n                        <Typography variant=\"h3\">\n                            <b>{selectedPackage?.value?.metadata?.Name}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography ml={2} variant=\"h6\">\n                            v\n                            {selectedPackage?.value?.metadata?.Version ?? \"NaN\"}\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Typography gutterBottom variant=\"body1\">\n                    {selectedPackage?.value?.metadata?.Summary ?? \"NaN\"}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <IconText\n                            text={\n                                selectedPackage?.value?.metadata?.License ??\n                                \"NaN\"\n                            }\n                            icon={<GavelIcon />}\n                        />\n                    </Grid>\n                </Grid>\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\">Thoth Justifications</Typography>\n                <Typography variant=\"body1\" mt={2}>\n                    {selectedPackage?.value?.justifications?.header}\n                </Typography>\n                {selectedPackage?.value?.justifications?.reasons?.length ? (\n                    <ul>\n                        {selectedPackage?.value?.justifications?.reasons.map(\n                            (reason, i) => {\n                                return (\n                                    <li key={i + reason.reason}>\n                                        <Typography variant=\"body1\" mt={2}>\n                                            <Link\n                                                underline=\"hover\"\n                                                onClick={() =>\n                                                    setSelected(reason.package)\n                                                }\n                                            >\n                                                {reason.package}\n                                            </Link>\n                                            {reason.reason}\n                                        </Typography>\n                                    </li>\n                                );\n                            },\n                        )}\n                    </ul>\n                ) : null}\n\n                {Object.entries(justifications).map(([type, reasons]) => {\n                    return (\n                        <React.Fragment key={type}>\n                            <Typography variant=\"h6\" mt={2}>\n                                {type} Justifications\n                            </Typography>\n                            {reasons.map((reason, i) => {\n                                return (\n                                    <Grid\n                                        container\n                                        alignItems=\"center\"\n                                        ml={3}\n                                        key={reason.message + i}\n                                    >\n                                        <Grid item xs={10}>\n                                            <Typography variant=\"body1\" mt={1}>\n                                                {reason.message}\n                                            </Typography>\n                                            <Typography\n                                                variant=\"body2\"\n                                                ml={3}\n                                                mt={0.5}\n                                            >\n                                                {reason.advisory}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button href={reason.link}>\n                                                READ MORE\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                );\n                            })}\n                        </React.Fragment>\n                    );\n                })}\n            </Paper>\n\n            <Paper sx={{ padding: 2, marginTop: 2 }}>\n                <Typography variant=\"h5\" mb={2}>\n                    Package Origins\n                </Typography>\n                <Typography variant=\"body1\" mb={2}>\n                    {[...(selectedPackage?.parents ?? [])].filter(\n                        p => p !== \"*App\",\n                    )?.length === 0\n                        ? selectedPackage?.value?.label +\n                          \" is not a dependent of any package in this Python environment\"\n                        : \"There are \" +\n                          [...(selectedPackage?.parents ?? [])].filter(\n                              p => p !== \"*App\",\n                          )?.length +\n                          \" package(s) that have \" +\n                          selectedPackage?.value?.label +\n                          \" as a direct dependency. Of those package(s)\"}\n\n                    {Object.keys(dependents).map((change, i) => {\n                        if (dependents[change].length === 0) {\n                            return null;\n                        }\n\n                        return (\n                            <React.Fragment key={change + i}>\n                                {\", \" +\n                                    dependents[change].length +\n                                    (change === \"version\"\n                                        ? \" had a version change \"\n                                        : (dependents[change].length === 1\n                                              ? \" was \"\n                                              : \" were \") + change) +\n                                    \" (\"}\n                                {dependents[change].map((p, i, a) => {\n                                    let text = p;\n                                    if (i !== a.length - 1) {\n                                        text += \", \";\n                                    }\n                                    return (\n                                        <Link\n                                            key={i + text}\n                                            underline=\"hover\"\n                                            onClick={() => setSelected(p)}\n                                        >\n                                            {text}\n                                        </Link>\n                                    );\n                                })}\n                                {\")\"}\n                            </React.Fragment>\n                        );\n                    })}\n                    {\".\"}\n                </Typography>\n\n                <NetworkGraphView mergedGraph={mergedGraph} />\n            </Paper>\n        </Box>\n    );\n};\n\nSelectedPackage.propTypes = {\n    mergedGraph: PropTypes.objectOf(Graph),\n};\n","import React, { useState } from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport { AdviseTableView } from \"../components\";\nimport { SelectedPackage } from \"../features\";\nimport PropTypes from \"prop-types\";\n\nexport const SelectedPackageContext = React.createContext();\n\nexport const AdviseDetails = ({ mergedGraph }) => {\n    const [search, setSearch] = useState(\"\");\n    const [selected, setSelected] = useState();\n\n    const handleSearch = event => {\n        setSearch(event.target.value);\n    };\n\n    if (!mergedGraph) {\n        return null;\n    }\n\n    return (\n        <SelectedPackageContext.Provider value={{ selected, setSelected }}>\n            <Grid\n                container\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"flex-start\"\n                mt={2}\n            >\n                <Grid item s={12} md={6}>\n                    <Paper sx={{ padding: 2 }}>\n                        <SearchBar\n                            onChange={handleSearch}\n                            lefticon={<SearchRoundedIcon />}\n                        />\n                        <AdviseTableView\n                            search={search}\n                            filteredGraph={mergedGraph}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid item s={12} md={6}>\n                    {!selected ? (\n                        <Typography variant=\"body1\" align=\"center\">\n                            No package selected\n                        </Typography>\n                    ) : (\n                        <SelectedPackage mergedGraph={mergedGraph} />\n                    )}\n                </Grid>\n            </Grid>\n        </SelectedPackageContext.Provider>\n    );\n};\n\nAdviseDetails.propTypes = {\n    mergedGraph: PropTypes.any,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport {\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TablePagination,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\n\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\nimport CircleOutlinedIcon from \"@material-ui/icons/CircleOutlined\";\n\n// utils\nimport { getComparator, stableSort } from \"./utils\";\n\n// local\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport PropTypes from \"prop-types\";\nimport { SelectedPackageContext } from \"../../routes/AdviseDetails\";\nimport { Graph } from \"utils/Graph\";\n\n/**\n * The table cells and total structure specific to\n * python packages.\n */\nexport function AdviseTableView({ search = \"\", filteredGraph }) {\n    const [order, setOrder] = useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"name\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\n    const [rows, setRows] = React.useState([]);\n    const { selected, setSelected } = useContext(SelectedPackageContext) ?? {\n        setSelected: () => console.log(\"missing callback\"),\n    };\n\n    // format data\n    useEffect(() => {\n        if (!filteredGraph) {\n            return;\n        }\n\n        setPage(0);\n\n        const newRows = [];\n        filteredGraph.nodes.forEach(node => {\n            if (node.value.depth === -1) {\n                return;\n            }\n            newRows.push({\n                name: node.value.label,\n                key: node.key,\n                warnings: [],\n                depth: node.value?.depth ?? -1,\n                license: node?.value?.metadata?.License,\n                dependencies: node.adjacents.size,\n                change: node.value?.change,\n                summary: node?.value?.metadata?.Summary,\n            });\n        });\n        setRows(newRows);\n    }, [filteredGraph]);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <TableContainer>\n                <Table sx={{ minWidth: 750 }} size=\"medium\">\n                    <EnhancedTableHead\n                        order={order}\n                        orderBy={orderBy}\n                        onRequestSort={handleRequestSort}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getComparator(order, orderBy))\n                            .filter(row => row.name.includes(search))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage,\n                            )\n                            .map((row, index) => {\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                const iconColor =\n                                    row.change === \"removed\"\n                                        ? \"error\"\n                                        : row.change === \"added\"\n                                        ? \"success\"\n                                        : undefined;\n                                return (\n                                    <React.Fragment key={row.name}>\n                                        <TableRow\n                                            hover\n                                            onClick={() => setSelected(row.key)}\n                                            tabIndex={-1}\n                                            selected={selected === row.key}\n                                        >\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                            >\n                                                <Box display=\"flex\">\n                                                    {row.change ===\n                                                    \"removed\" ? (\n                                                        <RemoveRoundedIcon\n                                                            color={iconColor}\n                                                        />\n                                                    ) : row.change ===\n                                                      \"added\" ? (\n                                                        <AddRoundedIcon\n                                                            color={iconColor}\n                                                        />\n                                                    ) : (\n                                                        <CircleOutlinedIcon />\n                                                    )}\n                                                    <Typography ml={2}>\n                                                        {row.name}\n                                                    </Typography>\n                                                </Box>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.depth}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.license}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row.dependencies}\n                                            </TableCell>\n                                        </TableRow>\n\n                                        <TableRow>\n                                            <TableCell\n                                                style={{\n                                                    paddingBottom: 0,\n                                                    paddingTop: 0,\n                                                }}\n                                                colSpan={6}\n                                            />\n                                        </TableRow>\n                                    </React.Fragment>\n                                );\n                            })}\n                        {emptyRows > 0 && (\n                            <TableRow\n                                style={{\n                                    height: 53 * emptyRows,\n                                }}\n                            >\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nAdviseTableView.propTypes = {\n    /** the text value used to filter the cells in the table */\n    search: PropTypes.string,\n    filteredGraph: PropTypes.objectOf(Graph),\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    lockfile: {\n        overflow: \"scroll\",\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * Renders out a Pipfile.lock file and attaches\n * `<a>` tags to package names, which is used to\n *  scroll to certain spot in the lock file\n */\nexport const LockfileView = ({ file }) => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant=\"caption\">\n            <pre>\n                <div\n                    className={classes.lockfile}\n                    dangerouslySetInnerHTML={{\n                        __html: JSON.stringify(file, undefined, 4)?.replaceAll(\n                            new RegExp(\n                                '(\"' +\n                                    Object.keys(file?.default)?.join('\"|\"') +\n                                    '\")',\n                                \"g\",\n                            ),\n                            match => {\n                                return `<a id=\"${match.slice(\n                                    1,\n                                    -1,\n                                )}\">${match}</a>`;\n                            },\n                        ),\n                    }}\n                />\n            </pre>\n        </Typography>\n    );\n};\n\nLockfileView.propTypes = {\n    /** The Pipfile.lock json object */\n    file: PropTypes.shape({ default: PropTypes.object.isRequired }),\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport {\n    DependenciesMetric,\n    CustomCardAction,\n    LicenseMetric,\n    AdviseMetric,\n} from \"../components\";\nimport PropTypes from \"prop-types\";\n\nexport const AdviseSummary = ({ metrics }) => {\n    const [pipfile, setPipfile] = React.useState(\"newGraph\");\n\n    const handlePipfile = (event, newPipfile) => {\n        if (newPipfile?.length) {\n            setPipfile(newPipfile);\n        }\n    };\n\n    return (\n        <Grid container spacing={3} mb={3} mt={1}>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Thoth Advise Summary\",\n                    }}\n                    cardBody={<AdviseMetric metric={metrics?.advise} />}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Dependencies Summary\",\n                    }}\n                    cardBody={\n                        <DependenciesMetric\n                            all={metrics?.[pipfile]?.dependencies?.all}\n                            roots={metrics?.[pipfile]?.dependencies?.roots}\n                        />\n                    }\n                    cardAction={\n                        <CustomCardAction\n                            value={pipfile}\n                            onChange={handlePipfile}\n                        />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Licenses Summary\",\n                    }}\n                    cardBody={\n                        <LicenseMetric metric={metrics?.[pipfile]?.licenses} />\n                    }\n                    cardAction={\n                        <CustomCardAction\n                            value={pipfile}\n                            onChange={handlePipfile}\n                        />\n                    }\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nAdviseSummary.propTypes = {\n    metrics: PropTypes.object,\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseDocument = async analysis_id => {\n    return axios.get(THOTH_URL + \"/advise/python/\" + analysis_id, {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useAdviseDocument = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"adviseDocument\", analysis_id],\n        queryFn: () => getAdviseDocument(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python/logs`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseLogs = async analysis_id => {\n    return axios.get(THOTH_URL + \"/advise/python/\" + analysis_id + \"/log\", {\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const useAdviseLogs = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"adviseLogs\", analysis_id],\n        queryFn: () => getAdviseLogs(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL, PYPI_URL } from \"config\";\nimport { useQueries, useQuery } from \"react-query\";\n\nexport const getPackageMetadata = async (\n    name,\n    version,\n    index,\n    os_name,\n    os_version,\n    python_version,\n) => {\n    return await axios.get(THOTH_URL + \"/python/package/version/metadata\", {\n        params: {\n            name: name,\n            version: version,\n            index: index,\n            os_name: os_name,\n            os_version: os_version,\n            python_version: python_version,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const getPackageMetadataPyPi = (name, version) => {\n    return axios\n        .get(PYPI_URL + \"/\" + name + (version ? \"/\" + version : \"\") + \"/json\")\n        .catch(() => {\n            return undefined;\n        });\n};\n\nexport const usePackageMetadata = (\n    name,\n    version,\n    index,\n    os_name,\n    os_version,\n    python_version,\n    config,\n) => {\n    return useQuery({\n        ...config,\n        queryKey: [\n            \"packageMetadata\",\n            name,\n            version,\n            index,\n            os_name,\n            os_version,\n            python_version,\n        ],\n        queryFn: () =>\n            getPackageMetadata(\n                name,\n                version,\n                index,\n                os_name,\n                os_version,\n                python_version,\n            ),\n    });\n};\n\nexport const usePackagesMetadata = (packages, config) => {\n    return useQueries(\n        packages.map(p => {\n            return {\n                ...config,\n                queryKey: [\n                    \"packageMetadata\",\n                    p.name,\n                    p.version,\n                    p.index,\n                    p.os_name,\n                    p.os_version,\n                    p.python_version,\n                ],\n                queryFn: () =>\n                    getPackageMetadata(\n                        p.name,\n                        p.version,\n                        p.index,\n                        p.os_name,\n                        p.os_version,\n                        p.python_version,\n                    ),\n            };\n        }),\n    );\n};\n","import { useMemo, useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"utils/Graph\";\n\n// api\nimport { usePackagesMetadata } from \"features/misc/api\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useGraph(data, knownRoots) {\n    const allMetadata = usePackagesMetadata(data);\n\n    const allMetadataStatus = useMemo(() => {\n        const status = {\n            loading: false,\n            error: false,\n            success: false,\n        };\n        if (allMetadata.length > 0) {\n            allMetadata.forEach(query => {\n                switch (query.status) {\n                    case \"error\":\n                        status.error = true;\n                        break;\n                    case \"success\":\n                        status.success = true;\n                        break;\n                    default:\n                        status.loading = true;\n                }\n            });\n        } else {\n            return \"loading\";\n        }\n\n        if (status.loading) {\n            return \"loading\";\n        } else if (status.error) {\n            return \"error\";\n        } else {\n            return \"success\";\n        }\n    }, [allMetadata]);\n\n    const [graph, setGraph] = useState();\n\n    useEffect(() => {\n        if (allMetadataStatus === \"loading\") {\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph();\n        const notRoot = [];\n\n        // add data to graph\n        allMetadata.forEach(query => {\n            // if could not find metadata\n            if (query.status === \"error\") {\n                const params = query.error.response.data.parameters;\n                const value = {\n                    id: params.name.toLowerCase(),\n                    label: params.name,\n                    metadata: null,\n                };\n\n                // add package to graph\n                const node = tempGraph.addVertex(value.id, value);\n                node.parents = new Set();\n            }\n            // metadata was found\n            else {\n                const metadata = query.data.data.metadata;\n                const value = {\n                    id: metadata.package_name.toLowerCase(),\n                    label: metadata.package_name,\n                    metadata: metadata.importlib_metadata.metadata,\n                };\n\n                // add package to graph\n                const node = tempGraph.addVertex(value.id, value);\n                node.parents = new Set();\n            }\n        });\n\n        // set edges\n        allMetadata.forEach(query => {\n            if (query.status === \"error\") {\n                return;\n            }\n\n            const currentNode = tempGraph.nodes.get(\n                query.data.data.metadata.package_name.toLowerCase(),\n            );\n\n            Object.keys(query.data.data.metadata.dependencies).forEach(dep => {\n                const adjacentNode = tempGraph.nodes.get(dep);\n\n                // if package exists in lockfile\n                if (adjacentNode) {\n                    // add edge connecting parent and dependency\n                    tempGraph.addEdge(\n                        currentNode.value.id,\n                        adjacentNode.value.id,\n                    );\n                    // set parent\n                    adjacentNode.parents.add(currentNode.value.id);\n                    notRoot.push(adjacentNode.value.id);\n                }\n            });\n        });\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\"*App\", {\n            id: \"*App\",\n            label: \"App\",\n            depth: -1,\n        });\n\n        notRoot.push(\"*App\");\n\n        const visited = new Map();\n        const visitList = [];\n\n        // get roots and connect to app\n        tempGraph.nodes.forEach((value, key, map) => {\n            if (\n                !notRoot.includes(key) ||\n                Object.keys(knownRoots).includes(key)\n            ) {\n                const node = map.get(key);\n                node.value.depth = 0;\n                node.parents.add(\"*App\");\n                visitList.push(node);\n                tempGraph.addEdge(app.key, node.key);\n            }\n        });\n\n        // set depth and parent packages using dfs\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node && !visited.has(node)) {\n                visited.set(node);\n\n                const adjs = node.getAdjacents();\n\n                for (let i = 0; i < adjs.length; i++) {\n                    // update depth\n                    adjs[i].value.depth = Math.min(\n                        node.value.depth + 1,\n                        adjs[i].value.depth ?? node.value.depth + 2,\n                    );\n                    visitList.push(adjs[i]);\n                }\n            }\n        }\n\n        setGraph(tempGraph);\n    }, [allMetadataStatus, knownRoots]);\n\n    return graph;\n}\n","import { useEffect, useMemo, useState } from \"react\";\n\nexport function useMetrics(oldGraph, newGraph, mergedGraph, adviseDocument) {\n    const adviseMetric = useAdviseMetric(mergedGraph, adviseDocument);\n    const oldDependencyMetric = useDependencyMetric(oldGraph);\n    const newDependencyMetric = useDependencyMetric(newGraph);\n    const oldLicenseMetric = useLicenseMetric(oldGraph);\n    const newLicenseMetric = useLicenseMetric(newGraph);\n\n    return useMemo(() => {\n        const base = {\n            advise: null,\n            oldGraph: { dependencies: null, licenses: null },\n            newGraph: { dependencies: null, licenses: null },\n        };\n\n        if (adviseMetric) {\n            base.advise = adviseMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.dependencies = oldDependencyMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.licenses = oldLicenseMetric;\n        }\n        if (newDependencyMetric) {\n            base.newGraph.dependencies = newDependencyMetric;\n        }\n        if (newLicenseMetric) {\n            base.newGraph.licenses = newLicenseMetric;\n        }\n\n        return base;\n    }, [\n        adviseMetric,\n        oldDependencyMetric,\n        oldLicenseMetric,\n        newDependencyMetric,\n        newLicenseMetric,\n    ]);\n}\n\nexport const useDependencyMetric = graph => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {\n            all: {},\n            roots: {},\n        };\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                const depth =\n                    node.value.depth === 0\n                        ? \"roots\"\n                        : node.value.depth === 1\n                        ? \"direct\"\n                        : \"indirect\";\n\n                // dependency metric\n                base = {\n                    all: {\n                        ...base.all,\n                        [depth]: (base.all[depth] ?? 0) + 1,\n                    },\n                    roots: {\n                        ...base.roots,\n                        [root]: {\n                            ...(base.roots[root] ?? null),\n                            [depth]: (base.roots?.[root]?.[depth] ?? 0) + 1,\n                        },\n                    },\n                };\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n\nexport const useLicenseMetric = graph => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {};\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                // licence metric\n                const packageLicenses = [];\n\n                // get general classification\n                node?.value?.metadata?.Classifier?.forEach(classifier => {\n                    const parsed = classifier.split(\" :: \");\n\n                    if (parsed[0] === \"License\") {\n                        if (parsed[1] === \"OSI Approved\") {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[2] ?? node.value.metadata.License,\n                                specificLicense: node.value.metadata.License,\n                                isOsiApproved: true,\n                            });\n                        } else {\n                            packageLicenses.push({\n                                generalLicense:\n                                    parsed?.[1] ?? node.value.metadata.License,\n                                specificLicense: node.value.metadata.License,\n                                isOsiApproved: false,\n                            });\n                        }\n                    }\n                });\n\n                if (packageLicenses.length === 0) {\n                    packageLicenses.push({\n                        generalLicense: node?.value?.metadata?.License ?? \"N/A\",\n                        specificLicense:\n                            node?.value?.metadata?.License ?? \"N/A\",\n                        isOsiApproved: null,\n                    });\n                }\n\n                // get specific classification\n                packageLicenses.forEach(license => {\n                    if (!base[license.generalLicense]) {\n                        base[license.generalLicense] = {\n                            packages: {},\n                            metadata: {\n                                isOsiApproved: license.isOsiApproved,\n                            },\n                        };\n                    }\n\n                    base = {\n                        ...base,\n                        [license.generalLicense]: {\n                            ...base[license.generalLicense],\n                            packages: {\n                                ...(base[license.generalLicense].packages ??\n                                    null),\n                                [node.value.label]: {\n                                    depth: node.value.depth,\n                                    specific: license.specificLicense,\n                                },\n                            },\n                        },\n                    };\n                });\n            });\n        });\n\n        setMetric(base);\n    }, [graph]);\n\n    return metric;\n};\n\nexport const useAdviseMetric = (graph, adviseDocument) => {\n    const [metric, setMetric] = useState();\n\n    useEffect(() => {\n        if (!graph || !adviseDocument) {\n            return;\n        }\n\n        const base = {\n            added: 0,\n            removed: 0,\n            version: 0,\n            unchanged: 0,\n            justification: {},\n            build: null,\n        };\n\n        // package changes\n        graph.nodes.forEach(node => {\n            switch (node.value.change) {\n                case \"added\":\n                    base.added++;\n                    break;\n                case \"removed\":\n                    base.removed++;\n                    break;\n                case \"version\":\n                    base.version++;\n                    break;\n                default:\n                    base.unchanged++;\n            }\n        });\n\n        //build environment\n        base.build = `We have analysed an application stack running on ${adviseDocument.metadata.os_release.name} ${adviseDocument.metadata.os_release.version}, running Python (${adviseDocument.metadata.python.implementation_name}) ${adviseDocument.metadata.python.major}.${adviseDocument.metadata.python.minor}.${adviseDocument.metadata.python.micro}. It was Adviser Job ID ${adviseDocument.metadata.document_id}, by ${adviseDocument.metadata.analyzer} v${adviseDocument.metadata.analyzer_version}.`;\n\n        //justification counts\n        adviseDocument?.result?.report?.products?.[0]?.justification.forEach(\n            justification => {\n                base.justification[justification.type] = base.justification[\n                    justification.type\n                ]\n                    ? base.justification[justification.type] + 1\n                    : 1;\n            },\n        );\n        setMetric(base);\n    }, [graph, adviseDocument]);\n\n    return metric;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AdviseNotFound = ({ analysis_id }) => {\n    return <div>`&quot;{analysis_id}&quot;` not found</div>;\n};\n\nAdviseNotFound.propTypes = {\n    analysis_id: PropTypes.string,\n};\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Layout is used in most of the app and allows for backwards navigation.\n */\nexport const NavigationLayout = ({ children }) => {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Button onClick={() => navigate(-1)}>go back</Button>\n            <div>{children}</div>\n        </>\n    );\n};\n\nNavigationLayout.propTypes = {\n    children: PropTypes.node,\n};\n","import React, { useMemo } from \"react\";\nimport { Route, Routes, useParams, Navigate } from \"react-router-dom\";\n\n// layouts\nimport { AdviseLayout } from \"components/Layout\";\n\n// sub-routes\nimport { AdviseSummary } from \"./AdviseSummary\";\nimport { AdviseDetails } from \"./AdviseDetails\";\n\n// feature specific imports\nimport { useAdviseDocument, useAdviseLogs } from \"../api\";\nimport { formatLockfile } from \"../utils\";\nimport { AdviseHeader } from \"../components\";\nimport { useMetrics, useMergeGraphs, useGraph } from \"../hooks\";\n\n// misc\nimport { CircularProgress } from \"@material-ui/core\";\nimport { AdviseNotFound } from \"./AdviseNotFound\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\nexport const AdviseRoutes = () => {\n    // get document id\n    const { analysis_id } = useParams();\n\n    // api get thoth advise document\n    const adviseDocument = useAdviseDocument(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: data => {\n            if (data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n\n    const logs = useAdviseLogs(analysis_id, {\n        useErrorBoundary: false,\n        refetchInterval: () => {\n            if (adviseDocument.data?.data?.status) {\n                return 10000;\n            }\n            return false;\n        },\n    });\n    // format init graph data\n    const initGraphData = useMemo(() => {\n        if (\n            adviseDocument.isSuccess &&\n            adviseDocument.data.data?.result?.parameters?.project\n        ) {\n            return formatLockfile(\n                adviseDocument.data.data.result.parameters.project,\n            );\n        }\n    }, [adviseDocument]);\n\n    // format advise graph data\n    const adviseGraphData = useMemo(() => {\n        if (\n            adviseDocument.isSuccess &&\n            adviseDocument.data.data?.result?.report?.products?.[0]?.project\n        ) {\n            return formatLockfile(\n                adviseDocument.data.data.result.report.products[0].project,\n            );\n        }\n    }, [adviseDocument]);\n\n    // create init graph\n    const initGraph = useGraph(\n        initGraphData ?? [],\n        adviseDocument.data?.data?.result?.parameters?.project?.requirements\n            ?.packages,\n    );\n    const adviseGraph = useGraph(\n        adviseGraphData ?? [],\n        adviseDocument.data?.data?.result?.report?.products?.[0]?.project\n            ?.requirements,\n    );\n\n    // merge graphs based on added, removed, changed packages\n    const mergedGraph = useMergeGraphs(\n        initGraph,\n        adviseGraph,\n        adviseDocument.data?.data,\n    );\n\n    // compute metric data\n    const metrics = useMetrics(\n        initGraph,\n        adviseGraph,\n        mergedGraph,\n        adviseDocument.data?.data,\n    );\n\n    if (adviseDocument.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!adviseDocument.data) {\n        return (\n            <NavigationLayout>\n                <AdviseNotFound analysis_id={analysis_id} />\n            </NavigationLayout>\n        );\n    }\n\n    return (\n        <NavigationLayout>\n            <AdviseLayout\n                header={\n                    <AdviseHeader\n                        adviseDocument={adviseDocument.data.data}\n                        logs={logs.data?.data?.log}\n                    />\n                }\n            >\n                <Routes>\n                    <Route\n                        path=\"summary\"\n                        element={<AdviseSummary metrics={metrics} />}\n                    />\n                    <Route\n                        path=\"details\"\n                        element={<AdviseDetails mergedGraph={mergedGraph} />}\n                    />\n                    <Route path=\"*\" element={<Navigate to=\"summary\" />} />\n                </Routes>\n            </AdviseLayout>\n        </NavigationLayout>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Graph } from \"utils/Graph\";\nimport { discoverPackageChanges } from \"../utils\";\n\nexport const useMergeGraphs = (oldGraph, newGraph, adviseDocument) => {\n    const [graph, setGraph] = useState();\n    const theme = useTheme();\n\n    useEffect(() => {\n        if (!oldGraph || !newGraph) {\n            return;\n        }\n\n        const visGraphEdges = [];\n        const mergedGraph = new Graph();\n\n        newGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = newGraph.nodes.get(key);\n\n            // check if added, changed, or unchanged\n            // if added (old graph doesnt have the package)\n            if (!oldGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"added\",\n                    label:\n                        value.value.label +\n                        \" \" +\n                        (value?.value?.metadata?.Version ?? \"\"),\n                    font: {\n                        color: theme.palette.success.main,\n                    },\n                    color: theme.palette.success.main,\n                    version: value?.value?.metadata?.Version ?? \"\",\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.License ?? \"\",\n                    lockfile: [\"new\"],\n                };\n            }\n            // if the graph is not new then it is either equal or the version changed\n            else {\n                // set values that wont change\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    label:\n                        value.value.label +\n                        \" \" +\n                        (value?.value?.metadata?.Version ?? \"\"),\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.License ?? \"\",\n                    lockfile: [\"new\", \"old\"],\n                };\n                // if the nodes are equal (version are the same)\n                if (\n                    value?.value?.metadata?.Version ===\n                    oldGraph.nodes.get(key)?.value?.metadata?.Version\n                ) {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        version: value?.value?.metadata?.Version ?? \"\",\n                        change: \"unchanged\",\n                    };\n                }\n                // if the version changed\n                else {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        change: \"version\",\n                        version: value?.value?.metadata?.Version ?? \"\",\n                        oldVersion:\n                            oldGraph.nodes.get(key)?.value?.metadata?.Version ??\n                            \"\",\n                        font: {\n                            color: theme.palette.success.main,\n                        },\n                    };\n\n                    combinedNode.parents = [\n                        ...new Set([\n                            ...combinedNode.parents,\n                            ...(oldGraph.nodes.get(key)?.parents ?? []),\n                        ]),\n                    ];\n\n                    // merge the dependencies because they could be different\n                    oldGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                    newGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                }\n            }\n\n            mergedGraph.nodes.set(key, combinedNode);\n        });\n\n        oldGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = oldGraph.nodes.get(key);\n\n            // only checking if package was removed\n            if (!newGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"removed\",\n                    label:\n                        value.value.label +\n                        \" \" +\n                        (value?.value?.metadata?.Version ?? \"\"),\n                    font: {\n                        color: theme.palette.error.main,\n                    },\n                    color: theme.palette.error.main,\n                    version: value?.value?.metadata?.Version ?? \"\",\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.License ?? \"\",\n                    lockfile: [\"old\"],\n                };\n\n                mergedGraph.nodes.set(key, combinedNode);\n            }\n        });\n\n        // add edges from old graph\n        oldGraph.nodes.forEach(value => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"old\",\n                });\n            });\n        });\n\n        // add edges from new graph\n        newGraph.nodes.forEach(value => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"new\",\n                });\n            });\n        });\n\n        // set justifications\n        discoverPackageChanges(\n            mergedGraph.nodes,\n            adviseDocument.result.report?.products?.[0]?.justification,\n        );\n\n        // add edges to merged graph Object\n        mergedGraph[\"visEdges\"] = visGraphEdges;\n\n        setGraph(mergedGraph);\n    }, [oldGraph, newGraph, adviseDocument, theme]);\n\n    return graph;\n};\n","import React, { useContext } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport { Box, MenuItem, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SpecContext } from \"features/package/routes/PackageOverview\";\n\nexport const ParamDropdown = ({ options, type, label, disabled, ...props }) => {\n    const navigate = useNavigate();\n    const { specs, defaultSpecs } = useContext(SpecContext);\n\n    const handleChange = event => {\n        switch (type) {\n            case \"package_version\":\n                navigate(\n                    `/package/${specs.package_name}/${event.target.value}`,\n                );\n                break;\n            case \"index_url\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(event.target.value)}`,\n                );\n                break;\n            case \"os_name\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${event.target.value}`,\n                );\n\n                break;\n            case \"os_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        event.target.value\n                    }`,\n                );\n                break;\n            case \"python_version\":\n                navigate(\n                    `/package/${specs.package_name}/${\n                        specs.package_version ?? defaultSpecs.package_version\n                    }/${encodeURIComponent(\n                        specs.index_url ?? defaultSpecs.index_url,\n                    )}/${specs.os_name ?? defaultSpecs.os_name}/${\n                        specs.os_version ?? defaultSpecs.os_version\n                    }/${event.target.value}`,\n                );\n                break;\n        }\n    };\n\n    return (\n        <Box {...props}>\n            <Typography variant=\"body2\">{label}</Typography>\n            <Select\n                displayEmpty\n                fullWidth\n                value={specs[type] ?? \"\"}\n                onChange={handleChange}\n                size=\"small\"\n                variant=\"outlined\"\n                disabled={disabled}\n                renderValue={value => {\n                    if (!value) {\n                        return (\n                            <em style={{ color: \"grey\" }}>\n                                {defaultSpecs?.[type] ?? label}\n                            </em>\n                        );\n                    } else {\n                        return value;\n                    }\n                }}\n            >\n                <MenuItem disabled value=\"\">\n                    <em>{label}</em>\n                </MenuItem>\n                {options.map(option => {\n                    return (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.value}\n                        </MenuItem>\n                    );\n                })}\n            </Select>\n        </Box>\n    );\n};\n\nParamDropdown.propTypes = {\n    options: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n    props: PropTypes.any,\n};\n","import React, { useContext, useMemo, useState } from \"react\";\n\n// material-ui\nimport { Box, Grid, IconButton, Skeleton, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ArrowLeftIcon from \"@mui/icons-material/ArrowLeft\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport PropTypes from \"prop-types\";\nimport { ParamDropdown } from \"../ParamDropdown\";\nimport { SpecContext } from \"../../routes/PackageOverview\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    titleRow: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    marginLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    linksRow: {\n        display: \"flex\",\n    },\n}));\n\n/**\n * A header for package metadata.\n */\nexport const PackageHeader = ({\n    metadata,\n    allVersions = [],\n    allEnvironments = [],\n}) => {\n    const classes = useStyles();\n    const { defaultSpecs, specs } = useContext(SpecContext);\n    const [showEnvParams, setShowEnvParams] = useState(false);\n\n    const versionOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (!dups.has(version.package_version)) {\n                    dups.add(version.package_version);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.package_version,\n                };\n            })\n            .sort((a, b) => (a.value.split(\".\") > b.value.split(\".\") ? 1 : -1));\n    }, [allVersions]);\n\n    const indexUrlOptions = useMemo(() => {\n        const dups = new Set();\n        return allVersions\n            .filter(version => {\n                if (specs.package_version) {\n                    return specs.package_version === version.package_version;\n                } else {\n                    return (\n                        defaultSpecs.package_version === version.package_version\n                    );\n                }\n            })\n            .filter(version => {\n                if (!dups.has(version.index_url)) {\n                    dups.add(version.index_url);\n                    return true;\n                }\n                return false;\n            })\n            .map(version => {\n                return {\n                    value: version.index_url,\n                };\n            });\n    }, [allVersions]);\n\n    const [osNameOptions, osVersionOptions, pythonVersionOptions] =\n        useMemo(() => {\n            const name = allEnvironments.map(env => {\n                return {\n                    value: env.os_name,\n                };\n            });\n            const version = allEnvironments\n                .filter(env => !specs.os_name || specs.os_name === env.os_name)\n                .map(env => {\n                    return {\n                        value: env.os_version,\n                    };\n                });\n            const pyVersion = allEnvironments\n                .filter(\n                    env =>\n                        (!specs.os_name || specs.os_name === env.os_name) &&\n                        (!specs.os_version ||\n                            specs.os_version === env.os_version),\n                )\n                .map(env => {\n                    return {\n                        value: env.python_version,\n                    };\n                });\n            return [name, version, pyVersion];\n        }, [allEnvironments, specs]);\n\n    if (!metadata) {\n        return (\n            <Box data-testid=\"package-header-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <div>\n            <Grid container alignItems=\"flex-end\" spacing={1}>\n                <Grid item>\n                    <Typography variant=\"h4\" mr={2}>\n                        <b>{metadata?.Name}</b>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={versionOptions ?? []}\n                        type=\"package_version\"\n                        label={\"Version\"}\n                    />\n                </Grid>\n                <Grid item>\n                    <ParamDropdown\n                        options={indexUrlOptions ?? []}\n                        type=\"index_url\"\n                        label={\"Index URL\"}\n                        disabled={specs.package_version === undefined}\n                    />\n                </Grid>\n                {showEnvParams ? (\n                    <React.Fragment>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osNameOptions ?? []}\n                                type=\"os_name\"\n                                label={\"OS Name\"}\n                                disabled={specs.index_url === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={osVersionOptions ?? []}\n                                type=\"os_version\"\n                                label={\"OS Version\"}\n                                disabled={specs.os_name === undefined}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ParamDropdown\n                                options={pythonVersionOptions ?? []}\n                                type=\"python_version\"\n                                label={\"Python Version\"}\n                                disabled={specs.os_version === undefined}\n                            />\n                        </Grid>\n                    </React.Fragment>\n                ) : null}\n                <Grid item xs={1}>\n                    <IconButton\n                        onClick={() => setShowEnvParams(!showEnvParams)}\n                        data-testid=\"package-header-expand-button\"\n                    >\n                        {showEnvParams ? (\n                            <ArrowLeftIcon fontSize=\"large\" />\n                        ) : (\n                            <ArrowRightIcon fontSize=\"large\" />\n                        )}\n                    </IconButton>\n                </Grid>\n            </Grid>\n\n            <Typography gutterBottom variant=\"body1\" mt={2}>\n                {metadata?.Summary ?? \"NaN\"}\n            </Typography>\n            <div className={classes.linksRow}>\n                <IconText\n                    text={metadata?.License ?? \"NaN\"}\n                    icon={<GavelIcon />}\n                />\n            </div>\n        </div>\n    );\n};\n\nPackageHeader.propTypes = {\n    /** Package metadata object.*/\n    metadata: PropTypes.shape({\n        /** Name of package. */\n        Name: PropTypes.string.isRequired,\n        /** Description of package. */\n        Summary: PropTypes.string,\n        /** License of package */\n        License: PropTypes.string,\n    }),\n    /** list of all versions of a package **/\n    allVersions: PropTypes.array,\n    /** list of all environments of a package, version, index **/\n    allEnvironments: PropTypes.array,\n};\n","import { Button, Grid, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const VersionDropdown = ({ node }) => {\n    const [open, setOpen] = React.useState(null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const navigate = useNavigate();\n\n    const versionOptions = useMemo(() => {\n        const versionOptions = {};\n        const distribution = [0, 0];\n        const noDup = new Set();\n        node.versions.forEach(version => {\n            const split = version.split(\".\");\n            const key = split[0] + \".\" + (split[1] ?? \"\");\n\n            if (versionOptions[key] === undefined) {\n                versionOptions[key] = [];\n                distribution[0] += 1;\n            }\n            if (!noDup.has(version)) {\n                versionOptions[key].push(version);\n                distribution[1] += 1;\n                noDup.add(version);\n            }\n        });\n\n        // check if there are too many buckets\n        if (distribution[0] / distribution[1] > 0.25) {\n            // merge buckets\n            const buckets = Math.ceil(distribution[0] * 0.25);\n            const fixedVersionOptions = {};\n            let currentKey;\n            Object.keys(versionOptions).forEach((key, index, array) => {\n                if (index % buckets === 0) {\n                    currentKey = `${key} - ${\n                        array[index + buckets - 1] ?? array.at(-1)\n                    }`;\n                    fixedVersionOptions[currentKey] = [];\n                }\n                fixedVersionOptions[currentKey].push(\n                    ...versionOptions[array[index]],\n                );\n            });\n            return fixedVersionOptions;\n        }\n\n        return versionOptions;\n    }, [node]);\n\n    return (\n        <div>\n            <Button\n                onClick={event => {\n                    setOpen(node.name);\n                    setAnchorEl(event.currentTarget);\n                }}\n                variant=\"outlined\"\n                endIcon={<KeyboardArrowDownIcon />}\n            >\n                {node.specifier ?? \"ANY\"}\n            </Button>\n            <Menu\n                open={open === node.name}\n                anchorEl={anchorEl}\n                onClose={() => {\n                    setOpen(undefined);\n                    setAnchorEl(null);\n                }}\n                PaperProps={{\n                    style: {\n                        maxHeight: \"40%\",\n                        maxWidth: \"50%\",\n                    },\n                }}\n            >\n                <MenuItem disabled={true}>\n                    Select a version to navigate to:\n                </MenuItem>\n                <Grid container alignContent=\"flex-start\">\n                    {Object.entries(versionOptions).map(([key, value]) => {\n                        return (\n                            <Grid item xs key={key}>\n                                <MenuItem mt={2} disabled divider>\n                                    {key}\n                                </MenuItem>\n                                {value.map(version => {\n                                    return (\n                                        <MenuItem\n                                            key={version}\n                                            onClick={() =>\n                                                navigate(\n                                                    `/package/${node.name}/${version}`,\n                                                )\n                                            }\n                                        >\n                                            <Typography variant={\"body2\"}>\n                                                {version}\n                                            </Typography>\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </Menu>\n        </div>\n    );\n};\n\nVersionDropdown.propTypes = {\n    node: PropTypes.shape({\n        name: PropTypes.string,\n        versions: PropTypes.array,\n        specifier: PropTypes.string,\n    }),\n};\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport InfoCard from \"components/Elements/InfoCard\";\nimport { Box, Divider, Grid, Skeleton, Typography } from \"@material-ui/core\";\nimport { VersionDropdown } from \"./VersionDropdown\";\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PackageDependencies = ({ graph }) => {\n    const metric = useMemo(() => {\n        if (!graph) {\n            return;\n        }\n\n        const bfs = graph.graphSearch(graph.nodes.get(\"*App\"));\n        const visitedOrder = Array.from(bfs);\n\n        const metric = [];\n\n        visitedOrder.forEach(node => {\n            if (node.key !== \"*App\" && !node.value.metadata) {\n                metric.push({\n                    name: node.value.label,\n                    versions: node.value.versions,\n                    specifier: node.value.specifier,\n                    extra: node.value.extra,\n                });\n            }\n        });\n\n        return metric;\n    }, [graph]);\n\n    if (!metric) {\n        return (\n            <Box data-testid=\"package-dependencies-not-loaded\">\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"} />\n            </Box>\n        );\n    }\n\n    return (\n        <InfoCard\n            cardMeta={{\n                title: \"Dependencies\",\n            }}\n            cardBody={\n                <div data-testid=\"package-dependencies-loaded\">\n                    <Grid container>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Package\n                            </Typography>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Versions\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Typography variant=\"h6\" gutterBottom>\n                                Extra\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider />\n                    <Grid container rowSpacing={2} mt={1}>\n                        {metric.map(node => {\n                            return (\n                                <Grid container item xs={12} key={node.name}>\n                                    <Grid item xs>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.name}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <VersionDropdown node={node} />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <Typography\n                                            variant=\"body1\"\n                                            gutterBottom\n                                        >\n                                            {node.extra?.join(\", \")}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </div>\n            }\n        />\n    );\n};\n\nPackageDependencies.propTypes = {\n    /** An object holding metric info. */\n    graph: PropTypes.shape({\n        graphSearch: PropTypes.func,\n        nodes: PropTypes.instanceOf(Map),\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const PackageNotFound = ({ package_name, package_version }) => {\n    return (\n        <div>\n            `&quot;{package_name}\n            {package_version ? \" \" + package_version : \"\"}&quot;` not found\n        </div>\n    );\n};\n\nPackageNotFound.propTypes = {\n    package_name: PropTypes.string,\n    package_version: PropTypes.string,\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography, Divider } from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\nconst useStyles = makeStyles(theme => ({\n    bar: {\n        marginBottom: theme.spacing(1),\n    },\n    marginBottom: {\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n/**\n * A metric card showing a package's (and its dependencies') licenses\n */\nexport const PackageLicenses = ({ metric }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"body2\" gutterBottom>\n                <b>License</b>\n            </Typography>\n            <Divider />\n            <Typography className={classes.marginBottom} variant=\"h6\">\n                {metric.root}\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>\n                <b>Dependency Licenses</b>\n            </Typography>\n            <Divider />\n\n            {Object.entries(metric?.all ?? {}).map(([key, value]) => {\n                return (\n                    <ProgressBar\n                        key={key}\n                        value={Object.keys(value).length ?? 0}\n                        total={metric.total}\n                        label={key}\n                        className={classes.bar}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nPackageLicenses.propTypes = {\n    metric: PropTypes.shape({\n        /** The total number of dependencies of the package */\n        total: PropTypes.number,\n        /** The license of the root package */\n        root: PropTypes.string,\n        /** key value object of package's dependencies' licenses\n         *\n         * ```\n         * all: {\n         *     MIT: {\n         *\n         *     }\n         * }\n         * ```\n         * */\n        all: PropTypes.object,\n    }).isRequired,\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\n\nexport const getPackageVersions = async (name, page = 0, per_page = 100) => {\n    return axios.get(THOTH_URL + \"/python/package/versions\", {\n        params: {\n            name: name,\n            page: page,\n            per_page: per_page,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const usePackageVersions = (name, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"packageVersions\", name],\n        queryFn: () => getPackageVersions(name),\n    });\n};\n\nexport const useInfinitePackageVersions = (name, config) => {\n    return useInfiniteQuery({\n        ...config,\n        queryKey: [\"packageVersions\", name],\n        queryFn: input => {\n            return getPackageVersions(name, input.pageParam);\n        },\n        getNextPageParam: lastPage => {\n            return lastPage.data.versions.length === 0\n                ? undefined\n                : lastPage.data.parameters.page + 1;\n        },\n    });\n};\n","import axios from \"axios\";\nimport { THOTH_URL } from \"config\";\nimport { useQuery } from \"react-query\";\n\nexport const getPackageEnvironments = async (name, version, index) => {\n    return axios.get(THOTH_URL + \"/python/package/version/environments\", {\n        params: {\n            name: name,\n            version: version,\n            index: index,\n        },\n        headers: {\n            accept: \"application/json\",\n        },\n    });\n};\n\nexport const usePackageEnvironments = (name, version, index, config) => {\n    return useQuery({\n        ...config,\n        queryKey: [\"packageEnvironments\", name, version, index],\n        queryFn: () => getPackageEnvironments(name, version, index),\n    });\n};\n","import { useEffect, useState } from \"react\";\nimport { useInfinitePackageVersions } from \"../api\";\n\nexport const useAllVersions = package_name => {\n    const versions = useInfinitePackageVersions(package_name);\n    const [allVersions, setAllVersions] = useState([]);\n\n    useEffect(() => {\n        if (versions.isSuccess) {\n            // if has a next page, and is not currently fetching a page\n            if (versions.hasNextPage && !versions.isFetchingNextPage) {\n                versions.fetchNextPage().then();\n            } else if (!versions.hasNextPage && !versions.isFetchingNextPage) {\n                let merged = [];\n                versions.data.pages.forEach(page => {\n                    merged = [...merged, ...page.data.versions];\n                });\n                if (merged.length > 0) {\n                    merged = merged.reverse();\n                    setAllVersions(merged);\n                } else {\n                    setAllVersions(undefined);\n                }\n            }\n        }\n    }, [versions.data]);\n\n    return allVersions;\n};\n","// React\nimport React, { useEffect, useMemo, useState } from \"react\";\n\n// local\nimport { PackageDependencies, PackageHeader } from \"../components\";\n\n// material-ui\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { usePackageMetadata } from \"features/misc/api\";\nimport { PackageNotFound } from \"./PackageNotFound\";\nimport { useAllVersions, useSimpleGraph } from \"../hooks\";\nimport { usePackageEnvironments } from \"../api\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: \"95%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n    },\n}));\n\nexport const SpecContext = React.createContext({});\n\n// The page that displays all analysis data\nexport const PackageOverview = () => {\n    const classes = useStyles();\n    const params = useParams();\n    const [defaultSpecs, setDefaultSpecs] = useState({\n        package_version: undefined,\n        index_url: undefined,\n        os_name: undefined,\n        os_version: undefined,\n        python_version: undefined,\n    });\n\n    // what is on the url params\n    const specs = useMemo(() => {\n        return {\n            package_name: params.package_name,\n            package_version: params?.package_version,\n            index_url: params?.index_url\n                ? decodeURIComponent(params.index_url)\n                : undefined,\n            os_name: params?.os_name,\n            os_version: params?.os_version,\n            python_version: params?.python_version,\n        };\n    }, [params]);\n\n    // get all pages of versions/indexes and merge them together\n    const allVersions = useAllVersions(specs.package_name);\n\n    // get environments for specific package, version, index\n    const allEnvironments = usePackageEnvironments(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        { useErrorBoundary: false },\n    );\n\n    // some params are optional but still need a default value\n    useEffect(() => {\n        let d = {\n            package_version: undefined,\n            index_url: undefined,\n            os_name: undefined,\n            os_version: undefined,\n            python_version: undefined,\n        };\n\n        // get default package version and index\n        // needs package name and versions list\n        if (specs.package_name && allVersions && allVersions.length > 0) {\n            d.package_version = allVersions.at(0).package_version;\n            d.index_url = allVersions.at(0).index_url;\n        }\n\n        // get default environment\n        // needs list of environments\n        if (\n            allEnvironments.data &&\n            allEnvironments.data.data.environments.length > 0\n        ) {\n            const filtered = allEnvironments.data.data.environments.filter(\n                env =>\n                    (!specs.os_name || specs.os_name === env.os_name) &&\n                    (!specs.os_version || specs.os_version === env.os_version),\n            );\n            if (filtered.length > 0) {\n                d.os_name = filtered.at(0).os_name;\n                d.os_version = filtered.at(0).os_version;\n                d.python_version = filtered.at(0).python_version;\n            }\n        }\n\n        if (Object.entries(defaultSpecs).some(([key, val]) => d[key] !== val)) {\n            setDefaultSpecs(d);\n        }\n    }, [allVersions, allEnvironments, specs]);\n\n    // get package metadata\n    const metadata = usePackageMetadata(\n        specs.package_name,\n        specs.package_version ?? defaultSpecs.package_version,\n        specs.index_url ?? defaultSpecs.index_url,\n        specs.os_name ?? defaultSpecs.os_name,\n        specs.os_version ?? defaultSpecs.os_version,\n        specs.python_version ?? defaultSpecs.python_version,\n        { useErrorBoundary: false },\n    );\n\n    const graph = useSimpleGraph(metadata);\n\n    if (metadata.isLoading || allVersions?.length === 0) {\n        return (\n            <div\n                className=\"w-full h-48 flex justify-center items-center\"\n                data-testid=\"loading\"\n            >\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (!metadata.data) {\n        return (\n            <PackageNotFound\n                package_name={params.package_name}\n                package_version={params.package_version ?? \"\"}\n            />\n        );\n    }\n\n    return (\n        <SpecContext.Provider value={{ specs, defaultSpecs }}>\n            <Grid container className={classes.root}>\n                <Grid item xs={12} mb={3}>\n                    <PackageHeader\n                        metadata={\n                            metadata.data.data.metadata.importlib_metadata\n                                .metadata\n                        }\n                        allVersions={allVersions}\n                        allEnvironments={allEnvironments.data.data.environments}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <PackageDependencies graph={graph} />\n                </Grid>\n            </Grid>\n        </SpecContext.Provider>\n    );\n};\n\nPackageOverview.propTypes = {\n    metadata: PropTypes.object,\n};\n","import { useEffect, useState } from \"react\";\n\n// utils\nimport { Graph } from \"utils/Graph\";\n\n/**\n * Given a list of packages, create a graph using metadata information.\n */\nexport function useSimpleGraph(metadata) {\n    const [graph, setGraph] = useState();\n\n    useEffect(() => {\n        if (metadata.status !== \"success\") {\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph();\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\"*App\", {\n            id: \"*App\",\n            label: \"App\",\n            depth: -1,\n        });\n\n        const root = tempGraph.addVertex(\n            metadata.data.data.metadata.package_name.toLowerCase(),\n            {\n                id: metadata.data.data.metadata.package_name.toLowerCase(),\n                label: metadata.data.data.metadata.package_name,\n                metadata:\n                    metadata.data.data.metadata.importlib_metadata.metadata,\n                depth: 0,\n            },\n        );\n\n        root.parents = new Set();\n        root.parents.add(\"*App\");\n        tempGraph.addEdge(app.key, root.key);\n\n        // add deps to graph\n        Object.entries(metadata.data.data.metadata.dependencies).forEach(\n            ([name, value]) => {\n                // add package to graph\n                const node = tempGraph.addVertex(name.toLowerCase(), {\n                    id: name.toLowerCase(),\n                    label: name,\n                    metadata: null,\n                    versions: value.versions,\n                    specifier: value.specifier,\n                    extra: value.extra,\n                    depth: 1,\n                });\n                node.parents = new Set();\n\n                tempGraph.addEdge(root.key, node.key);\n\n                // set parent\n                node.parents.add(root.key);\n            },\n        );\n\n        setGraph(tempGraph);\n    }, [metadata.data]);\n\n    return graph;\n}\n","// React\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { PackageOverview } from \"./PackageOverview\";\nimport { NotFound } from \"features/misc\";\nimport { NavigationLayout } from \"components/Layout/NavigationLayout\";\n\n// The page that displays all analysis data\nexport const PackageRoutes = () => {\n    return (\n        <NavigationLayout>\n            <Routes>\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version/:python_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url/:os_name/:os_version\"\n                    element={<PackageOverview />}\n                />\n                <Route\n                    path=\"/:package_version/:index_url\"\n                    element={<PackageOverview />}\n                />\n                <Route path=\"/:package_version\" element={<PackageOverview />} />\n                <Route path=\"/\" element={<PackageOverview />} />\n                <Route path=\"*\" status={404} element={<NotFound />} />\n            </Routes>\n        </NavigationLayout>\n    );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"features/home\";\nimport { NotFound } from \"features/misc\";\nimport { AdviseRoutes } from \"features/advise\";\nimport { PackageRoutes } from \"features/package\";\n\nexport const RouterConfig = () => {\n    return (\n        <BrowserRouter\n            basename={\n                process.env.REACT_APP_DEPLOYMENT === \"STAGE\"\n                    ? \"/search-stage\"\n                    : \"/search\"\n            }\n        >\n            <Routes>\n                <Route exact path={\"/\"} element={<Home />} />\n                <Route\n                    exact\n                    path={\"advise/:analysis_id/*\"}\n                    element={<AdviseRoutes />}\n                />\n                <Route\n                    path={\"package/:package_name/*\"}\n                    element={<PackageRoutes />}\n                />\n                <Route path=\"*\" status={404} element={<NotFound />} />\n            </Routes>\n        </BrowserRouter>\n    );\n};\n\nexport default RouterConfig;\n","import React from \"react\";\nimport { AppProvider } from \"providers/app\";\nimport RouterConfig from \"routes/RouterConfig\";\n\nfunction App() {\n    return (\n        <AppProvider>\n            <RouterConfig />\n        </AppProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}